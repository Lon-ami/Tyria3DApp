{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/FlyControls.js","src/SceneUtils.js","src/Tyria3DApp.js","src/UI.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","raycaster","controls","SceneUtils","velocity","THREE","Vector3","moveUp","moveForward","moveBackward","moveLeft","moveRight","canJump","speed","isFly","mapReady","FlyControls","prototype","updateURL","pos","getObject","position","pitch","Math","round","getPitchObject","rotation","x","yaw","y","positionURL","map","$","val","z","loadZone","prop","loadProp","showHavok","window","location","hash","param","getControls","setSpeed","value","toggleFly","setSensitivity","invertMouse","update","delta","enabled","underwater","object","dirSpeed","getDirection","normalize","multiplyScalar","set","translateX","translateY","intersections","ray","origin","copy","intersectObjects","getCollisions","max","distance","translateZ","lock","element","document","body","requestPointerLock","mozRequestPointerLock","webkitRequestPointerLock","setMapReady","init","self","this","exitPointerLock","mozExitPointerLock","webkitExitPointerLock","pointerlockchange","event","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","controlsEnabled","fadeOut","fadeIn","pointerlockerror","addEventListener","getRenderer","domElement","on","PointerLockControls","getCamera","getScene","add","keyCode","Raycaster","scene","skyScene","camera","oCamera","currentCamera","skyCamera","cameraOpts","renderer","collisions","nonCollisions","terrainChunks","lights","skyObjects","fogDistance","renderCounter","traverseLODs","LOD","setupScene","Scene","sceneWidth","innerWidth","PerspectiveCamera","innerHeight","directionalLight","globalAmbient","AmbientLight","DirectionalLight","fog","Fog","WebGLRenderer","sortObjects","stencil","premultipliedAlpha","antialiasing","setSize","autoClear","style","appendChild","resize","render","setPerspective","setOrthographic","l","b","fac","aspect","dx","abs","dy","m","OrthographicCamera","PI","setHSLa","h","s","color","setHSL","intensity","setRenderVisible","display","applyCameraRotationTo","parent","rx","ry","traverse","clear","getClearColor","forEach","elem","remove","updateProjectionMatrix","setAmbientAdd","v","added","addScalar","setFog","far","near","mesh","material","uniforms","needsUpdate","showProgressPanel","cb","pp","is","find","html","showPanel","showMapPanel","panelIn","currentPanel","swapPanels","panelOut","dir","css","height","removeClass","animateOutProp","animateInProp","addClass","right","left","animate","getSkyScene","getNonCollisions","getTerrainChunks","getSkyObjects","getLights","UI","Tyria3DApp","stats","controller","hasPointerLock","ui","lastTs","animating","localReader","_mapRect","mapAutoLoad","animationTime","ready","onDocumentReady","bind","initAnim","first","margin-top","slideUp","delay","parseUri","slice","console","log","hide","Stats","append","loadMap","filePicker","fileIcon","click","trigger","change","evt","file","target","files","T3D","getLocalReader","setTimeout","getMapListAsync","applyMapList","undefined","deepSearchButton","confirm","searchParagraph","keyDownListener","mouseWheelListener","fileName","absolute","renderers","renderClass","HavokRenderer","settings","visible","EnvironmentRenderer","TerrainRenderer","anisotropy","getMaxAnisotropy","push","ZoneRenderer","PropertiesRenderer","renderMapContentsAsync","onMapLoaded","mapData","meshes","skyElements","terrainTiles","water","hazeColor","Color","setClearColor","bounds","slider","hasLight","y2","mapList","picker","empty","compareName","name","maps","sort","g","group","each","Event","sign","wheelDelta","min","timestamp","requestAnimationFrame","toggle","xMin","x1","xMax","x2","yMin","y1","yMax","uri","data","split","result","elt","Number","version","hasWebGL","WebGLRenderingContext","one","holder","selectMap","mapListObject","filter","logProgress","op","arguments","parseFloat","Logger","logFunctions","TYPE_PROGRESS","TYPE_DEBUG","$UI","outputWrapper","top","output","progressOutput","errorOutput","suspendedPanel","mapOpts","reload","MapFileList","label","blur","movementOpts","step","exp","sens","select"],"mappings":"CAAA,WAAA,OAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,IAAAS,YAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,GAAA,EAAA,EAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCCA,IAWAK,EACAC,EAZAC,EAAAb,EAAA,gBAGAc,EAAA,IAAAC,MAAAC,QACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAEAC,GAAA,EAGAC,EAAA,IAGAC,GAAA,EACAC,GAAA,EAEAC,EAAA,aAKAA,EAAAC,UAAAC,UAAA,WAEA,IAAAC,EAAAjB,EAAAkB,YAAAC,SAEAC,EAAAC,KAAAC,MAAA,IAAAtB,EAAAuB,iBAAAC,SAAAC,GAAA,IACAC,EAAAL,KAAAC,MAAA,IAAAtB,EAAAkB,YAAAM,SAAAG,GAAA,IAIAC,GACAC,IAHAC,EAAA,cAAAC,MAIAN,EAAAJ,KAAAC,MAAA,IAAAL,EAAAQ,GAAA,IACAE,EAAAN,KAAAC,MAAA,IAAAL,EAAAU,GAAA,IACAK,EAAAX,KAAAC,MAAA,IAAAL,EAAAe,GAAA,IACAZ,MAAAA,EACAM,IAAAA,EACAO,SAAAH,EAAA,aAAAI,KAAA,WACAC,SAAAL,EAAA,aAAAI,KAAA,WACAE,UAAAN,EAAA,cAAAI,KAAA,YAIAG,OAAAC,SAAAC,KAAAT,EAAAU,MAAAZ,IAIAd,EAAAC,UAAA0B,YAAA,WACA,OAAAzC,GAGAc,EAAAC,UAAA2B,SAAA,SAAAC,GACAhC,EAAAgC,GAGA7B,EAAAC,UAAA6B,UAAA,WACAhC,GAAAA,GAGAE,EAAAC,UAAA8B,eAAA,SAAAF,GACA3C,EAAA6C,eAAAF,IAGA7B,EAAAC,UAAA+B,YAAA,WACA9C,EAAA8C,eAGAhC,EAAAC,UAAAgC,OAAA,SAAAC,GACA,GAAAhD,EAAAiD,QAAA,CAIA,IAAAC,EAAAlD,EAAAkB,YAAAC,SAAAQ,EAAA,EAEA,GAAAf,GAAAsC,EAAA,CAEA,IAAAC,EAAAnD,EAAAkB,YAQA,GAPAhB,EAAAuB,EAAA,EACAvB,EAAAyB,EAAA,EAGAzB,EAAA8B,EAAA,EAGA1B,GAAAC,EAAA,CACA,IAAA6C,EAAA9C,EAAAK,GAAAA,EACAX,EAAAqD,aAAAnD,GACAA,EAAAoD,YAIApD,EAAAqD,eAAAH,GAEAD,EAAAhC,SAAAqC,IACAL,EAAAhC,SAAAM,EAAAvB,EAAAuB,EAAAuB,EACAG,EAAAhC,SAAAQ,EAAAzB,EAAAyB,EAAAqB,EACAG,EAAAhC,SAAAa,EAAA9B,EAAA8B,EAAAgB,GAGA,GAAAxC,GAAAC,EAAA,CACA2C,EAAA3C,EAAAE,GAAAA,EACAwC,EAAAM,WAAAL,EAAAJ,GAGA3C,GACAL,EAAAkB,YAAAwC,WAAA/C,EAAAqC,OAIA,CAYA,IAAAW,EAgBA,GAzBAzD,EAAA8B,EAAA1B,GAAAK,EACAJ,EAAAI,EACA,EAEAT,EAAAuB,EAAAjB,GAAAG,EACAF,EAAAE,EACA,EAMAZ,EAAA6D,IAAAC,OAAAC,KAAA9D,EAAAkB,YAAAC,UAGAwC,EAAA5D,EAAAgE,iBAAA9D,EAAA+D,kBAUA,IAPAL,EAAA/D,OAAA,EAOA,CACAM,EAAAyB,EAAAN,KAAA4C,IAAA,EAAA/D,EAAAyB,GAIA3B,EAAAkB,YAAAwC,WAlIA,GAkIAC,EAAA,GAAAO,SADA,QAMAhE,EAAAyB,GAAA,EAAAhB,EAAAqC,EAGAhD,EAAAkB,YAAAuC,WAAAvD,EAAAuB,EAAAuB,GACAhD,EAAAkB,YAAAwC,WAAAxD,EAAAyB,EAAAqB,GACAhD,EAAAkB,YAAAiD,WAAAjE,EAAA8B,EAAAgB,GAQA,OAAA,EAGA,OAAA,GAIAlC,EAAAC,UAAAqD,KAAA,WACA,IAAAC,EAAAC,SAAAC,KAGAF,EAAAG,mBAAAH,EAAAG,oBAAAH,EAAAI,uBAAAJ,EAAAK,yBAyBAL,EAAAG,sBAKA1D,EAAAC,UAAA4D,YAAA,SAAAhC,GACA9B,EAAA8B,GAGA7B,EAAAC,UAAA6D,KAAA,WAGA,KAFA,uBAAAN,UAAA,0BAAAA,UAAA,6BAAAA,UAoEA,OAAA,EAhEA,IAAAO,EAAAC,KACAT,EAAAC,SAAAC,KAEAD,SAAAS,gBAAAT,SAAAS,iBACAT,SAAAU,oBACAV,SAAAW,sBAGA,IAAAC,EAAA,SAAAC,GAEAtE,IAGAyD,SAAAc,qBAAAf,GAAAC,SAAAe,wBAAAhB,GAAAC,SAAAgB,2BAAAjB,GAEAkB,iBAAA,EACAvF,EAAAiD,SAAA,EAEAnB,EAAA,WAAA0D,QAAA,OAIA1D,EAAA,WAAA2D,OAAA,KAEAZ,EAAA7D,YAEAhB,EAAAiD,SAAA,KAMAyC,EAAA,SAAAP,KAMAb,SAAAqB,iBAAA,oBAAAT,GAAA,GACAZ,SAAAqB,iBAAA,uBAAAT,GAAA,GACAZ,SAAAqB,iBAAA,0BAAAT,GAAA,GAEAZ,SAAAqB,iBAAA,mBAAAD,GAAA,GACApB,SAAAqB,iBAAA,sBAAAD,GAAA,GACApB,SAAAqB,iBAAA,yBAAAD,GAAA,GAEAzF,EAAA2F,cAAAC,WAAAF,iBAAA,YAAA,SAAAR,GACAtE,GACAgE,EAAAT,SACA,GACAtC,EAAA,kBAAAgE,GAAA,YAAA,SAAAX,GACAtE,GACAgE,EAAAT,SAGAE,SAAAqB,iBAAA,UAAA,SAAAR,GACAb,SAAAS,kBACA/E,EAAAiD,SAAA,IACA,GAUAjD,EAAA,IAAAG,MAAA4F,oBAAA9F,EAAA+F,YAAA,MAEA/F,EAAAgG,WAAAC,IAAAlG,EAAAkB,aA+EA,OALAoD,SAAAqB,iBAAA,UAxEA,SAAAR,GAEA,OAAAA,EAAAgB,SAEA,KAAA,GACA,KAAA,GACA7F,GAAA,EACA,MAEA,KAAA,GACA,KAAA,GACAE,GAAA,EAAA,MAEA,KAAA,GACA,KAAA,GACAD,GAAA,EACA,MAEA,KAAA,GACA,KAAA,GACAE,GAAA,EACA,MAEA,KAAA,GAEAJ,GAAA,GAGA,IAAAK,IACAR,EAAAyB,GAAAhB,EACAD,GAAA,MA0CA,GACA4D,SAAAqB,iBAAA,QAnCA,SAAAR,GAEA,OAAAA,EAAAgB,SAEA,KAAA,GACA,KAAA,GACA7F,GAAA,EACA,MAEA,KAAA,GACA,KAAA,GACAE,GAAA,EACA,MAEA,KAAA,GACA,KAAA,GACAD,GAAA,EACA,MAEA,KAAA,GACA,KAAA,GACAE,GAAA,EACA,MAEA,KAAA,GACAJ,GAAA,EAEAK,GAAA,KAQA,GAEAX,EAAA,IAAAI,MAAAiG,UAAA,IAAAjG,MAAAC,QAAA,IAAAD,MAAAC,QAAA,GAAA,EAAA,GAAA,EAzVA,KA2VA,GAKAN,EAAAJ,QAAAoB,0CChXA,IAIAuF,EAAAC,EACAC,EAAAC,EACAC,EAAAC,EANAC,EACA,GADAA,EACA,GADAA,EACA,IAMAC,EAAA,KAEAC,KACAC,KACAC,KACAC,KAEAC,KAEAC,EAAA,EAEAC,EAAA,EAEA,SAAAC,EAAAjE,GACAA,aAAAhD,MAAAkH,KACAlE,EAAAJ,OAAAwD,GAIAzG,EAAAJ,SACA4H,WAAA,WAEAjB,EAAA,IAAAlG,MAAAoH,MACAjB,EAAA,IAAAnG,MAAAoH,MAGA,IAAAC,EAAAnF,OAAAoF,WAEAhB,EAAAF,EAAA,IAAApG,MAAAuH,kBAAAf,EACAa,EAAAnF,OAAAsF,YACAhB,EAAAO,GAEAR,EAAA,IAAAvG,MAAAuH,kBAAAf,EACAa,EAAAnF,OAAAsF,YACAhB,EAAA,KAMA,IASAiB,EATAC,EAAA,IAAA1H,MAAA2H,aAAA,GACAzB,EAAAH,IAAA2B,IAGAD,EAAA,IAAAzH,MAAA4H,iBAAA,SAAA,KACA5G,SAAAqC,IAAA,EAAA,EAAA,GACA6C,EAAAH,IAAA0B,IAGAA,EAAA,IAAAzH,MAAA4H,iBAAA,SAAA,KACA5G,SAAAqC,KAAA,EAAA,GAAA,GACA6C,EAAAH,IAAA0B,GAGAvB,EAAA2B,IAAA,IAAA7H,MAAA8H,IAAA,SAAA5G,KAAA4C,IAAA,EAAAiD,EAAAP,GAAAO,IAOAN,EAAA,IAAAzG,MAAA+H,eAEAC,aAAA,EACAC,SAAA,EACAC,oBAAA,EACAC,cAAA,KAGAH,aAAA,EACAvB,EAAA2B,QAAAf,EAAAnF,OAAAsF,aAEAf,EAAA4B,WAAA,EAEA5B,EAAAf,WAAA4C,MAAAtH,SAAA,WAGAmD,SAAAC,KAAAmE,YAAA9B,EAAAf,YAGA/D,EAAAO,QAAAsG,OAAA7D,KAAA6D,QAEA7D,KAAA8D,UAKAC,eAAA,WACApC,EAAAF,EACAzB,KAAA8D,UAGAE,gBAAA,SAAAC,EAAAnK,EAAAG,EAAAiK,EAAAlK,EAAAI,GAEA,IAeA+J,EAbAC,EAFA7G,OAAAoF,WAEApF,OAAAsF,YAEAwB,EAAA9H,KAAA+H,IAAAL,EAAAnK,GACAyK,EAAAhI,KAAA+H,IAAArK,EAAAiK,GAEAG,EAAAE,EAAAH,GAGAH,GADAE,EADAI,EAAAH,GACA,EAAAC,GAEAvK,GAAAqK,IAKAlK,GADAkK,EADAE,EAAAD,GACA,EAAAG,GAEAL,GAAAC,GAIA,IAAAK,EAAA,KACAP,GAAAO,EAAA1K,GAAA0K,EAAAvK,GAAAuK,EAAAN,GAAAM,GAEA9C,EAAA,IAAArG,MAAAoJ,mBAAAR,EAAAnK,EAAAG,EAAAiK,EAAAlK,EAAAI,IACAiC,SAAAqC,IAAA,GAAAuF,EAAAnK,GAAA,GAAAM,EAAA,EAAA,GAAAH,EAAAiK,GAAA,GACAxC,EAAAhF,SAAAgC,IAAAnC,KAAAmI,GAAA,EAAA,EAAA,EAAA,OAIA/C,EAAAD,EAEA1B,KAAA8D,UAIAa,QAAA,SAAAC,EAAAC,EAAAZ,EAAAzJ,GAEA,IADA,IACAL,EAAA,EAAAA,EAAA,EAAAA,IACA+H,EAAA/H,KACA+H,EAAA/H,GAAA2K,MAAAC,OAAAH,EAAAC,EAAAZ,GACA/B,EAAA/H,GAAA6K,UAAAxK,EACAoK,GAAAA,EALA,IAKA,IAKAK,iBAAA,SAAApH,GAEAiE,EAAAf,WAAA4C,MAAAuB,QADArH,EACA,QAEA,QAGAsH,sBAAA,SAAAjL,GACA,GAAAuH,EAAA2D,OAAA,CACA,IAAAC,EAAA5D,EAAA2D,OAAA1I,SAAAC,EACA2I,EAAA7D,EAAA2D,OAAAA,OAAA1I,SAAAG,EACA3C,EAAAwC,SAAAgC,IAAA2G,EAAAC,EAAA,EAAA,SAIAxB,OAAA,WACA,OAAAhC,IAMA,MAAAO,IACAA,EAAA,EACAd,EAAAgE,SAAAjD,IAIAR,EAAA0D,MAAA1D,EAAA2D,iBAGAhE,GAAAE,IACA3B,KAAAmF,sBAAAvD,GACAE,EAAAgC,OAAAtC,EAAAI,IAOAE,EAAAgC,OAAAvC,EAAAI,KAIA6D,MAAA,WAEAzD,EAAA2D,QAAA,SAAAC,GACApE,EAAAqE,OAAAD,KAGA3D,EAAA0D,QAAA,SAAAC,GACApE,EAAAqE,OAAAD,KAGAzD,EAAAwD,QAAA,SAAAC,GACApE,EAAAqE,OAAAD,KAGAxD,EAAAuD,QAAA,SAAAC,GACAnE,EAAAoE,OAAAD,KAGA3D,KACAD,KACAG,KACAC,KACAF,MAGA4B,OAAA,WACA,IAAAnB,EAAAnF,OAAAoF,WAEAlB,EAAA2C,OAAA1B,EAAAnF,OAAAsF,YACAjB,EAAAwC,OAAA1B,EAAAnF,OAAAsF,YAEAf,EAAA2B,QAAAf,EAAAnF,OAAAsF,aAEApB,EAAAoE,yBACAjE,EAAAiE,yBAGA7K,EAAAJ,QAAAkJ,UAGAgC,cAAA,SAAAjI,GACAqE,EAAAwD,QACA,SAAAC,GACA,IAAAI,EAAAlI,EACA8H,EAAAK,QACAD,GAAAJ,EAAAK,OAEAL,aAAAtK,MAAA2H,cACA2C,EAAAb,MAAAmB,UAAAF,GAEAJ,EAAAK,MAAAnI,IAGA7C,EAAAJ,QAAAkJ,UAGAoC,OAAA,SAAA9G,GACAgD,EAAAhD,EACAmC,GAAAA,EAAA2B,MACA3B,EAAA2B,IAAAiD,IAAA/G,EACAmC,EAAA2B,IAAAkD,KAAA7J,KAAA4C,IAAA,EAAAC,EAAAyC,IAEAJ,IACAA,EAAA0E,IAAA/G,EACAqC,EAAAoE,yBAGA5D,EAAAyD,QAAA,SAAAW,GACAA,EAAAC,SAAAC,SAAA,QAAA1I,MAAA0D,EAAA2B,IAAAkD,KACAC,EAAAC,SAAAC,SAAA,OAAA1I,MAAA0D,EAAA2B,IAAAiD,IACAE,EAAAC,SAAAE,aAAA,KAGAxG,KAAA8D,UAIA2C,kBAAA,SAAAC,GACA,IAAAC,EAAA3J,EAAA,kBAEA2J,EAAAC,GAAA,YACAF,GACAA,KAIAC,EAAAE,KAAA,kBAAAC,KAAA,WACAH,EAAAE,KAAA,aAAAC,KAAA,OAEA9G,KAAA+G,UAAAJ,EAAAD,KAGAM,aAAA,SAAAN,GACA1G,KAAA+G,UAAA/J,EAAA,aAAA0J,IAGAK,UAAA,SAAAE,EAAAP,GACA,IAAAQ,EAAAlK,EAAA,WAAA6J,KAAA,qBAEA7G,KAAAmH,WAAAD,EAAAD,GAAA,EAAAP,IAIAS,WAAA,SAAAC,EAAAH,EAAAI,EAAAX,GAKAU,EAAAhC,SAAAkC,KAAAC,OAAAH,EAAAhC,SAAAmC,WACAN,EAAAO,YAAA,UACA,IAWAC,EAAAC,EAXA9C,EAAAqC,EAAAM,SACAN,EAAAU,SAAA,UAIAV,EAAAK,KAAAM,MAAAP,GAAA,IAAA,OAAAQ,KAAAR,EAAA,QAAA,MAIAD,EAAAE,KAAAM,MAAAP,GAAA,IAAA,SAGAA,GACAI,GAAAI,MAAA,KACAH,GAAAE,MAAA,KAGAH,GAAAG,OAAA,KACAF,GAAAG,KAAA,IAIAT,EAAAU,QAAAL,EA5BA,EACA,QA2BA,WAGAL,EAAAO,SAAA,UAGAP,EAAAhC,SAAA0C,SAAAP,OAAA3C,GAAA3K,EAjCA,QAiCA,WAGAgN,EAAAO,YAAA,UACAP,EAAAa,QAAAJ,EAtCA,EACA,QAqCAhB,QAOAvF,SAAA,WAAA,OAAAI,GACAwG,YAAA,WAAA,OAAAvG,GACAN,UAAA,WAAA,OAAAO,GACAX,YAAA,WAAA,OAAAgB,GACA5C,cAAA,WAAA,OAAA6C,GACAiG,iBAAA,WAAA,OAAAhG,GACAiG,iBAAA,WAAA,OAAAhG,GACAiG,cAAA,WAAA,OAAA/F,GACAgG,UAAA,WAAA,OAAAjG,4BC5VA,IAAAkG,EAAA9N,EAAA,WACAa,EAAAb,EAAA,mBACA0B,EAAA1B,EAAA,oBAYA+N,EAAArN,EAAAJ,QAAA,WAEAoF,KAAAjD,IACAiD,KAAAsI,MACAtI,KAAAuI,WACAvI,KAAAwI,eACAxI,KAAAyI,GAEAzI,KAAA0I,QAAA,EACA1I,KAAA2I,WAAA,EACA3I,KAAA4I,YAAA,KACA5I,KAAA6I,SAAA,KACA7I,KAAA8I,YAAA,KAEA9I,KAAA+I,cAAA,EAGA/L,EAAAwC,UAAAwJ,MAAAhJ,KAAAiJ,gBAAAC,KAAAlJ,OAKAA,KAAAmJ,SAAA,WACA,IAAApJ,EAAAC,KACAhD,EAAA,gBAAAoM,QAAAtB,SAAAuB,aAAA,IAAAtJ,EAAAgJ,eACA/L,EAAA,OAAAsM,QAAAvJ,EAAAgJ,cAAA,WACA/L,EAAA,UAAAuM,MAAAxJ,EAAAgJ,eAAArI,QAAAX,EAAAgJ,cAAAhJ,EAAAD,KAAAoJ,KAAAnJ,OAOAC,KAAAF,KAAA,WACA,IAAAC,EAAAC,KAEAA,KAAA8I,YAAAU,EAAAjM,OAAAC,SAAAC,KAAAgM,MAAA,IACAC,QAAAC,IAAA3J,KAAA8I,aAGA9L,EAAA,UAAA4M,OAGA5J,KAAAsI,MAAA,IAAAuB,MACA7M,EAAA,QAAA8M,OAAA9J,KAAAsI,MAAAvH,YAGAf,KAAAuI,WAAA,IAAAvM,EAGAgE,KAAAyI,GAAA,IAAAL,EAAApL,EAAA,QAAAgD,KAAAuI,WAAAvI,KAAA+J,QAAAb,KAAAnJ,IACAC,KAAAyI,GAAA3I,OAGA,IAAAkK,EAAAhN,EAAA,wCACAiN,EAAAjN,EAAA,qFACAiN,EAAAC,MAAA,WACAF,EAAAG,QAAA,WAkCAH,EAAAI,OA9BA,SAAAC,GAIA,IACAC,EADAD,EAAAE,OAAAC,MACA,GAEAR,EAAA/M,IAAA,IAGA8C,EAAA6I,YAAA6B,IAAAC,eAAAJ,EAAA,WAIAnP,EAAAsL,kBAAA,WAEAzJ,EAAA,WAAA6J,KAAA,kBAAAC,KAAA,mCACA9J,EAAA,WAAA6J,KAAA,aAAAC,KAAA,gBAEA6D,WAAA,WACAF,IAAAG,gBAAA7K,EAAA6I,YAAA7I,EAAA8K,aAAA3B,KAAAnJ,IAAA,IACA,YAEA+K,OAAAA,EAAA,yBAUA9N,EAAA,cAAA8M,OAAAE,GACAhN,EAAA,cAAA8M,OAAAG,GAGA,IAAAc,EAAA/N,EAAA,4DACA+N,EAAAb,MAAA,SAAAG,GACAW,QACA,6SAMA7P,EAAAsL,kBAAA,WAEAzJ,EAAA,WAAA6J,KAAA,kBAAAC,KAAA,mCACA9J,EAAA,WAAA6J,KAAA,aAAAC,KAAA,gBAEA6D,WAAA,WACAF,IAAAG,gBAAA7K,EAAA6I,YAAA7I,EAAA8K,cAAA,IACA,QAQA,IAAAI,EAAAjO,EAAA,6CACAiO,EAAAnB,OAAAiB,GACA/N,EAAA,aAAA8M,OAAAmB,GAGAzL,SAAAqB,iBAAA,UAAAb,KAAAkL,iBAAA,GACA1L,SAAAqB,iBAAA,aAAAb,KAAAmL,oBAAA,GAGAhQ,EAAAqH,aAGArH,EAAA8J,kBAAA,GAGAjF,KAAAwI,eAAAxI,KAAAuI,WAAAzI,QAaAE,KAAA+J,QAAA,SAAAqB,EAAAC,GAEA,IAEA/N,EAQAD,EAQAF,EAlBA4C,EAAAC,UAGA8K,GAAA/K,EAAA+I,YAAAxL,WACAA,EAAAyC,EAAA+I,YAAAxL,UACAN,EAAA,cAAAI,KAAA,UAAAE,IAEAA,EAAAN,EAAA,cAAAI,KAAA,gBAIA0N,GAAA/K,EAAA+I,YAAAzL,UACAA,EAAA0C,EAAA+I,YAAAzL,SACAL,EAAA,aAAAI,KAAA,UAAAC,IAEAA,EAAAL,EAAA,aAAAI,KAAA,gBAIA0N,GAAA/K,EAAA+I,YAAA3L,UACAA,EAAA4C,EAAA+I,YAAA3L,SACAH,EAAA,aAAAI,KAAA,UAAAD,IAEAA,EAAAH,EAAA,aAAAI,KAAA,WAIAjC,EAAAsL,kBAAA,WAGA1G,EAAAwI,WAAA1I,aAAA,GACA1E,EAAA8J,kBAAA,GAGA,IAAAqG,IAEAC,YAAAd,IAAAe,cACAC,UACAC,QAAApO,KAIAiO,YAAAd,IAAAkB,oBACAF,cAGAF,YAAAd,IAAAmB,gBACAH,UACAI,WAAA1Q,EAAA2F,cAAAgL,sBAKA3O,GACAmO,EAAAS,MACAR,YAAAd,IAAAuB,aACAP,cAGApO,GACAiO,EAAAS,MACAR,YAAAd,IAAAwB,mBACAR,cAKAhB,IAAAyB,uBAAAnM,EAAA6I,YAAAwC,EAAAE,EAAAvL,EAAAoM,YAAAjD,KAAAnJ,OASAC,KAAAmM,YAAA,SAAAC,GAEAjR,EAAAqK,aAGAsF,GAAAsB,EAAAJ,cACAI,EAAAJ,aAAAK,OAAA3G,QAAA,SAAAC,GACAxK,EAAAgG,WAAAC,IAAAuE,GACAxK,EAAA6M,mBAAA+D,KAAApG,UAKAmF,GAAAsB,EAAAH,oBACAG,EAAAH,mBAAAI,OAAA3G,QAAA,SAAAC,GACAxK,EAAAgG,WAAAC,IAAAuE,GACAxK,EAAA6M,mBAAA+D,KAAApG,KAIAyG,EAAAT,oBAAAW,YAAA5G,QAAA,SAAAC,GACAxK,EAAA4M,cAAA3G,IAAAuE,GACAxK,EAAA+M,gBAAA6D,KAAApG,KAKAyG,EAAAR,gBAAAW,aAAA7G,QAAA,SAAAC,GACAxK,EAAAgG,WAAAC,IAAAuE,GACAxK,EAAA8M,mBAAA8D,KAAApG,GACAxK,EAAA+D,gBAAA6M,KAAApG,KAGAxK,EAAAgG,WAAAC,IAAAgL,EAAAR,gBAAAY,OACArR,EAAA6M,mBAAA+D,KAAAK,EAAAR,gBAAAY,YAGA1B,GAAAsB,EAAAZ,eACAY,EAAAZ,cAAAa,OAAA3G,QAAA,SAAAC,GACAxK,EAAAgG,WAAAC,IAAAuE,GACAxK,EAAA+D,gBAAA6M,KAAApG,KAKAyG,EAAAT,oBAAAzJ,OAAAwD,QAAA,SAAAC,GACAxK,EAAAgG,WAAAC,IAAAuE,GACAxK,EAAAgN,YAAA4D,KAAApG,KAIA,IAAA8G,EAAAL,EAAAT,oBAAAc,UACA3H,EAAA,IAAAzJ,MAAAqR,MAAAD,EAAA,GAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,GAAA,KACAtR,EAAA2F,cAAA6L,cAAA7H,EAAA,GACA3J,EAAAgG,WAAA+B,IAAA4B,MAAA9F,KAAA8F,GAGA+D,SAAAuD,EAAAR,gBAAAgB,OAGA5M,KAAAuI,WAAA1I,aAAA,GACA7C,EAAA,OAAAwK,YAAA,UAGAxK,EAAA,kBAAA6P,OAAA,QAAAT,EAAAT,oBAAAmB,SAAA,EAAA,IAGA9P,EAAA,cAAA6P,OAAA,QAAA,MAGA7M,KAAAwI,eACArN,EAAA4L,UAAA/J,EAAA,oBAGA7B,EAAA4L,UAAA/J,EAAA,gBAIA,IAAA9B,EAAA8E,KAAAuI,WAAA5K,cACAzC,EAAAkB,YAAAC,SAAAqC,IAAA,EAAA0N,EAAAR,gBAAAgB,OAAAR,EAAAR,gBAAAgB,OAAAG,GAAA,EAAA,GACA7R,EAAAuB,iBAAAC,SAAAC,GAAAJ,KAAAmI,GAAA,OAGAoG,GAAA9K,KAAA8I,YAAAnM,QAAAmO,GAAA9K,KAAA8I,YAAAjM,QAAAiO,GAAA9K,KAAA8I,YAAA5L,GACAhC,EAAAkB,YAAAC,SAAAqC,IAAAsB,KAAA8I,YAAAnM,EAAAqD,KAAA8I,YAAAjM,EAAAmD,KAAA8I,YAAA5L,QAEA4N,GAAA9K,KAAA8I,YAAAlM,UAAAkO,GAAA9K,KAAA8I,YAAAxM,QACApB,EAAAuB,iBAAAC,SAAAC,EAAAqD,KAAA8I,YAAAxM,MACApB,EAAAkB,YAAAM,SAAAG,EAAAmD,KAAA8I,YAAAlM,KAIAoD,KAAA8I,eAGA3N,EAAA2I,SAIA3I,EAAA8J,kBAAA,GAGAjF,KAAA2I,YACA3I,KAAA2I,WAAA,EACA3I,KAAA8H,QAAA,IAGA9H,KAAAuI,WAAArM,aAUA8D,KAAA6K,aAAA,SAAAmC,GACA,IAAAjN,EAAAC,KAEAA,KAAA8I,YAAAU,EAAAjM,OAAAC,SAAAC,KAAAgM,MAAA,IAGA,IAAAwD,EAAAjQ,EAAA,cACAiQ,EAAAC,QACAD,EAAAnD,OAAA9M,EAAA,kEAGA,IAAAmQ,EAAA,SAAA3S,EAAA0J,GACA,OAAA1J,EAAA4S,KAAAlJ,EAAAkJ,MACA,EACA5S,EAAA4S,KAAAlJ,EAAAkJ,KACA,EACA,GAGAJ,EAAAK,KAAAC,KAAAH,GAEAH,EAAAK,KAAA3H,QAAA,SAAA6H,GACA,IAAAC,EAAAxQ,EAAA,oBAAAuQ,EAAAH,KAAA,QACAH,EAAAnD,OAAA0D,GAEAD,EAAAF,KAAAC,KAAAH,GACAI,EAAAF,KAAA3H,QAAA,SAAAlB,GACAgJ,EAAA1D,OAAA,kBAAAtF,EAAA4G,SAAA,KAAA5G,EAAA4I,KAAA,iBAKAjS,EAAA6L,oBAGA8D,GAAA/K,EAAA+I,YAAA,KACA9L,EAAA,qBAAAyQ,KAAA,WACA,GAAA1N,EAAA+I,YAAA,KAAA9I,KAAAnC,MAAA,CACA,IAAA9D,EAAAiD,EAAA0Q,MAAA,UACA1Q,EAAA,cAAAC,IAAA+C,KAAAnC,OACAb,EAAA,cAAAmN,QAAApQ,OAMAiG,KAAAmL,mBAAA,SAAAd,GACA,IAAAhD,EAAA9K,KAAAoR,KAAAtD,EAAAuD,YACA/I,EAAA7H,EAAA,oBACA6Q,EAAAhJ,EAAAgI,OAAA,SAAA,OACA1N,EAAA0F,EAAAgI,OAAA,SAAA,OAGA5P,GAFAkC,EAAA0O,GAEAxG,EAAA,IAAAxC,EAAAgI,OAAA,SAAA,SACA5P,EAAAV,KAAAsR,IAAA1O,EAAAlC,GACAA,EAAAV,KAAA4C,IAAA0O,EAAA5Q,GAEA4H,EAAAgI,OAAA,SAAA,QAAA5P,IAQA+C,KAAA8H,QAAA,SAAAgG,GAGA,IAAA5P,EAAA4P,EAAA9N,KAAA0I,OACAxK,EAAA,IAEA8B,KAAA0I,OAAAoF,EAGA9N,KAAAuI,WAAAtK,OAAA,KAAAC,IAGA/C,EAAA2I,SAIA9D,KAAAsI,MAAArK,UAIAV,OAAAwQ,sBAAA/N,KAAA8H,QAAAoB,KAAAlJ,QASAA,KAAAkL,gBAAA,SAAAb,GAWA,GAVA,IAAAA,EAAAhJ,UACArE,EAAA,OAAAgR,SACA7S,EAAA0I,UAEA,IAAAwG,EAAAhJ,SACArE,EAAA,UAAAgR,SAEA,IAAA3D,EAAAhJ,SACAlG,EAAA4I,iBAEA,IAAAsG,EAAAhJ,QAAA,CAEA,IAAAvH,EAAA+O,SACA,GAAA/O,EAAA,CACA,IAAAmU,EAAAnU,EAAAoU,GACAC,EAAArU,EAAAsU,GACAC,EAAAvU,EAAAwU,GACAC,EAAAzU,EAAAiT,GACA5R,EAAA6I,gBAAAiK,EAAAE,EAAAE,EAAAE,EAAA,KAAA,MAGA,IAAAlE,EAAAhJ,SACArE,EAAA,aAAAmN,QAAA,WAsCA,SAAAX,EAAAgF,GACA,IAAAC,EAAAD,EAAAE,MAAA,KACAC,KACA,GAAAH,EAAA1T,OAAA,EAAA,OAAA6T,EACA,IAAAC,OAAAH,EACAG,IAAAA,IAAAF,MAAA,KACA,QAAAE,IAAA,IAAA,SAAAA,IAAA,GACAD,EAAAC,IAAA,IAAA,QAAAA,IAAA,GAEAD,EAAAC,IAAA,IAAAC,OAAAD,IAAA,IAGA,OAAAD,EA3CAtG,EAAApM,UAAAgN,gBAAA,WAEAS,QAAAC,IAAA,wBAAAc,IAAAqE,SACA,IAIAC,EAAAtE,IAAAsE,WAGA/R,EAAA,oBAAA2K,SAAA,UAGApK,OAAAyR,uBAAAD,GAWAxR,OAAAC,SAAAC,KAAA3C,OAAA,GArBAkF,KAsBAmJ,WAEAnM,EAAA,kBAAAwK,YAAA,UAAAyH,IAAA,QAxBAjP,KAwBAmJ,SAAAD,KAxBAlJ,QAWAhD,EAAA,YAAAwK,YAAA,WAiCA,IAAAa,8EClhBA,IAAAlN,EAAAb,EAAA,gBAMA8N,EAAA,SAAA8G,EAAA3G,EAAAwB,GACA/J,KAAAkP,OAAAA,EACAlP,KAAAuI,WAAAA,EACAvI,KAAA+J,QAAAA,GAGA3B,EAAAnM,UAAAkT,UAAA,SAAAC,GACApS,EAAA,qBAAAqS,OAAA,WACA,OAAArS,EAAAgD,MAAA/C,OAAAmS,EAAAhE,WACAhO,KAAA,YAAA,GACAJ,EAAA,cAAAoN,UAGAhC,EAAAnM,UAAAqT,YAAA,WACAlH,EAAAmH,KACAnH,EAAAmH,GAAAvS,EAAA,YAGA,aAAAwS,UAAA,IACApH,EAAAmH,GAAA1I,KAAA,kBAAAC,KAAA0I,UAAA,IAEAC,WAAAD,UAAA,IACApH,EAAAmH,GAAA1I,KAAA,aAAAC,KAAA0I,UAAA,GAAA,KAGApH,EAAAmH,GAAA1I,KAAA,aAAAC,KAAA0I,UAAA,KAKApH,EAAAnM,UAAA6D,KAAA,WACA,IAAAC,EAAAC,KAGAyK,IAAAiF,OAAAC,aAAAlF,IAAAiF,OAAAE,eAAA5P,KAAAsP,YACA7E,IAAAiF,OAAAC,aAAAlF,IAAAiF,OAAAG,YAAA,aAGA,IAAAC,EAAA9S,EAAA,6CAEAgD,KAAAkP,OAAApF,OAAAgG,GAKA,IAAAC,EAAA/S,EAAA,6BACA+S,EAAAzI,KAAA0I,KAAA,MAAAzG,MAlDA,GAkDAzB,SAAAkI,IAAA,GAjDA,GAkDA,IAAAC,EAAAjT,EAAA,yCAEA+S,EAAAjG,OAAAmG,GACAjQ,KAAAkP,OAAApF,OAAAiG,GAGAE,EAAAnG,OAAA9M,EACA,wgBAiBA,IAAAkT,EAAAlT,EAAA,+GAIAiT,EAAAnG,OAAAoG,GAEA,IAAAC,EAAAnT,EAAA,uRAMAiT,EAAAnG,OAAAqG,GAEA,IAAAC,EAAApT,EAAA,+UAMAiT,EAAAnG,OAAAsG,GAIA,IAAAC,EAAArT,EAAA,0XAaAiT,EAAAnG,OAAAuG,GAEArT,EAAA,YAAAkN,MAAA,SAAAG,GACAlP,EAAAgM,WAAAnK,EAAA,aAAAA,EAAA,iBAGAA,EAAA,aAAAkN,MAAA,WACA1M,SAAA8S,WAOAD,EAAAvG,OAAA9M,EAEA,oYAiBA,IAAAiQ,EAAAjQ,EAAA,0CACAiQ,EAAAnD,OAAA9M,EAAA,wEAGAyN,IAAA8F,YAAAlD,KAAA3H,QAAA,SAAA6H,GACA,IAAAC,EAAAxQ,EAAA,oBAAAuQ,EAAAH,KAAA,QACAH,EAAAnD,OAAA0D,GACAD,EAAAF,KAAA3H,QAAA,SAAAlB,GACAgJ,EAAA1D,OAAA,kBAAAtF,EAAA4G,SAAA,KAAA5G,EAAA4I,KAAA,iBAMAH,EAAA7C,OAAA,SAAAC,GACA,IAAApN,EAAAgQ,EAAAhQ,MACA8C,EAAAgK,QAAA9M,EAAAoN,EAAAxM,OAEA,IAAA2S,EAAAxT,EAAA,qBAAAqS,OAAA,WACA,OAAArS,EAAAgD,MAAA/C,OAAAA,IACA6J,OACA9J,EAAA,aAAA8J,KAAA0J,GAGAvD,EAAAwD,SAEAJ,EAAAvG,OAAAmD,GAGAoD,EAAAvG,OAAA9M,EAAA,2pBAiBA,IAAA0T,EAAA1T,EAAA,2gDAwCA8S,EAAAhG,OAAA4G,GAEA1T,EAAA,qBAAAkN,MAAA,WAGA3M,OAAAC,SAAAC,KAAA,GAEAT,EAAA,OAAA2K,SAAA,UACA5H,EAAAwI,WAAA1I,aAAA,GACA1E,EAAAgM,WAAAnK,EAAA,mBAAAA,EAAA,cACAA,EAAA,UAAA4M,OACA5M,EAAA,qBAAAI,KAAA,YAAA,GACAJ,EAAA,qBAAAoM,QAAAhM,KAAA,YAAA,KAwCAJ,EAAA,oBAAA6P,QACAgB,IAAA,EAAA1O,IAAA,GAAAwR,KAAA,IACAvG,OAvCA,SAAAC,EAAA5B,GACA,IAAA5M,EAAAU,KAAAqU,IAAAnI,EAAA5K,OACAN,OAAAoN,WAAA,WACA5K,EAAAwI,WAAA3K,SAAA/B,IACA,OAoCAgR,OAAA,QAAA,KAEA7P,EAAA,oBAAA6P,QACAgB,IAAA,KAAA1O,IAAA,IAAAwR,KAAA,KACAvG,OArCA,SAAAC,EAAA5B,GACA,IAAAoI,EAAApI,EAAA5K,MACAN,OAAAoN,WAAA,WACA5K,EAAAwI,WAAAxK,eAAA8S,IACA,OAkCAhE,OAAA,QAAA,MAEA7P,EAAA,cAAA6P,QACAgB,IAAA,IAAA1O,IAAA,IAAAwR,KAAA,IACAvG,OAnCA,SAAAC,EAAA5B,GACAtN,EAAA+K,OAAAuC,EAAA5K,UAqCAb,EAAA,kBAAA6P,QACAgB,IAAA,EAAA1O,IAAA,EAAAwR,KAAA,IACAvG,OApCA,SAAAC,EAAA5B,GACAtN,EAAA2K,cAAA2C,EAAA5K,UAwDAb,EAAA,gBAAAoN,OAAA,WACArK,EAAAwI,WAAAvK,gBAEAhB,EAAA,aAAAoN,OAAA,WAOArK,EAAAwI,WAAAzK,cAGAd,EAAA,iBAAAkN,MAAA,WACAnK,EAAAwI,WAAAjJ,SAIAtC,EAAA,kBAAAgE,GAAA,QAAA,WAAAhB,KAAA8Q,YAeA9V,EAAAJ,QAAAwN","file":"T3DAPP-1.0.6.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","//require(\"../../../vendor/three/PointerLockControls\");\r\nvar SceneUtils = require(\"./SceneUtils\");\r\n\r\n\r\nvar velocity = new THREE.Vector3();\r\nvar moveUp = false;\r\nvar moveForward = false;\r\nvar moveBackward = false;\r\nvar moveLeft = false;\r\nvar moveRight = false;\r\nvar isOnObject = false;\r\nvar canJump = false;\r\nvar raycaster;\r\nvar controls;\r\nvar speed = 500;\r\nvar sensitivity = 500;\r\nvar bodyHeight = 70;\r\nvar isFly = true;\r\nvar mapReady = false;\r\n\r\nvar FlyControls = function(){\r\n\t///this. .. = \r\n\t//this.();\r\n};\r\n\r\nFlyControls.prototype.updateURL = function(){\r\n\t/// Write position to UI (fugly but whatevs)\r\n\tvar pos = controls.getObject().position;\r\n\t\r\n\tvar pitch =  Math.round(controls.getPitchObject().rotation.x*10000)/10000;\r\n\tvar yaw =   Math.round(controls.getObject().rotation.y*10000)/10000;\r\n\t\r\n\tvar mapFileName = $(\"#mapPicker\").val();\r\n\r\n\tvar positionURL = {\r\n\t\tmap: mapFileName,\r\n\t\tx: Math.round(pos.x*1000)/1000,\r\n\t\ty: Math.round(pos.y*1000)/1000,\r\n\t\tz: Math.round(pos.z*1000)/1000,\r\n\t\tpitch: pitch,\r\n\t\tyaw: yaw,\r\n\t\tloadZone: $(\"#loadZone\").prop(\"checked\"), \r\n\t\tloadProp: $(\"#loadProp\").prop(\"checked\"), \r\n\t\tshowHavok: $(\"#showHavok\").prop(\"checked\"),\r\n\t};\r\n\r\n\t//Write position to URL\r\n\twindow.location.hash = $.param(positionURL);\r\n\r\n}\r\n\r\nFlyControls.prototype.getControls=function(){\r\n\treturn controls;\r\n}\r\n\r\nFlyControls.prototype.setSpeed=function(value){\r\n\tspeed = value;\r\n}\r\n\r\nFlyControls.prototype.toggleFly=function(){\r\n\tisFly = !isFly;\r\n}\r\n\r\nFlyControls.prototype.setSensitivity=function(value){\r\n\tcontrols.setSensitivity(value);\r\n}\r\n\r\nFlyControls.prototype.invertMouse = function(){\r\n\tcontrols.invertMouse();\r\n};\r\n\r\nFlyControls.prototype.update=function(delta){\r\n\tif( controls.enabled ){\r\n\r\n\r\n\r\n\t\tvar underwater = controls.getObject().position.y<0;\r\n\r\n\t\tif(isFly || underwater){\r\n\t\t\t/// Free fly\r\n\t\t\tvar object = controls.getObject();\r\n\t\t\tvelocity.x = 0;\r\n\t\t\tvelocity.y = 0;\r\n\r\n\t\t\t// TODO: handle water better\r\n\t\t\tvelocity.z = 0;\r\n\r\n\t\t\t\r\n\t\t\tif( moveForward || moveBackward){\r\n\t\t\t\tvar dirSpeed = moveForward ? speed : -speed;\r\n\t\t\t\tcontrols.getDirection( velocity );\r\n\t\t\t\tvelocity.normalize();\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t        //vector.applyEuler(camera.rotation, camera.rotation.order).normalize();\r\n\t\t        velocity.multiplyScalar(dirSpeed);\r\n\r\n\t\t        object.position.set(\r\n\t\t\t\tobject.position.x + velocity.x * delta,\r\n\t\t\t\tobject.position.y + velocity.y * delta,\r\n\t\t\t\tobject.position.z + velocity.z * delta);\r\n\t\t\t}\r\n\r\n\t\t\tif( moveLeft || moveRight){\r\n\t\t\t\tvar dirSpeed = moveRight ? speed : -speed;\r\n\t\t\t\tobject.translateX( dirSpeed * delta );\r\n\t\t\t}\r\n\r\n\t\t\tif(moveUp){\r\n\t\t\t\tcontrols.getObject().translateY( speed * delta );\r\n\t\t\t}\r\n\t\t} /// End if fly\r\n\r\n\t\telse{\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif ( moveForward ) \t\t\tvelocity.z = -speed;\r\n\t\t\telse if ( moveBackward ) \tvelocity.z = speed;\r\n\t\t\telse \t\t\t\t\t\tvelocity.z = 0;\r\n\r\n\t\t\tif ( moveLeft ) \t\t\tvelocity.x = -speed;\r\n\t\t\telse if ( moveRight ) \t\tvelocity.x = speed;\r\n\t\t\telse \t\t\t\t\t\tvelocity.x = 0;\r\n\r\n\t\t\r\n\t\t\tvar intersections;\r\n\r\n\t\t\t//if( velocity.y < 0 ){\r\n\t\t\t\traycaster.ray.origin.copy( controls.getObject().position );\r\n\t\t\t\t\r\n\t\t\t\t/// Check for object under us\r\n\t\t\t\tintersections = raycaster.intersectObjects( SceneUtils.getCollisions() );\r\n\r\n\t\t\t\t/// If there are any, valocity will be set to 0 or higher, if not gravity will pull\r\n\t\t\t\tisOnObject = intersections.length > 0;\r\n\t\t\t/*}\r\n\t\t\telse if( velocity.y > 0){\r\n\t\t\t\tisOnObject = false;\r\n\t\t\t}*/\r\n\r\n\t\t\r\n\t\t\tif ( isOnObject === true ) {\r\n\t\t\t\tvelocity.y = Math.max( 0, velocity.y );\r\n\r\n\t\t\t\t/// Move up to avoid sinking trough ground\r\n\t\t\t\tvar eps = 1;\r\n\t\t\t\tcontrols.getObject().translateY( bodyHeight - intersections[0].distance - eps);\r\n\r\n\t\t\t\t//canJump = true;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tvelocity.y -= speed * 2 * delta; \r\n\t\t\t}\r\n\r\n\t\t\tcontrols.getObject().translateX( velocity.x * delta );\r\n\t\t\tcontrols.getObject().translateY( velocity.y * delta );\r\n\t\t\tcontrols.getObject().translateZ( velocity.z * delta );\r\n\r\n\t\t}/// End if not fly\r\n\t\t\r\n\r\n\r\n\t\t\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n\r\n}\r\n\r\nFlyControls.prototype.lock=function(){\r\n\tvar element = document.body;\r\n\r\n\t// Ask the browser to lock the pointer\r\n\telement.requestPointerLock = element.requestPointerLock || element.mozRequestPointerLock || element.webkitRequestPointerLock;\r\n\r\n\tif ( false &&  /Firefox/i.test( navigator.userAgent ) ) {\r\n\r\n\t\tvar fullscreenchange = function ( event ) {\r\n\r\n\t\t\tif ( document.fullscreenElement === element || document.mozFullscreenElement === element || document.mozFullScreenElement === element ) {\r\n\r\n\t\t\t\tdocument.removeEventListener( 'fullscreenchange', fullscreenchange );\r\n\t\t\t\tdocument.removeEventListener( 'mozfullscreenchange', fullscreenchange );\r\n\r\n\t\t\t\telement.requestPointerLock();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdocument.addEventListener( 'fullscreenchange', fullscreenchange, false );\r\n\t\tdocument.addEventListener( 'mozfullscreenchange', fullscreenchange, false );\r\n\r\n\t\telement.requestFullscreen = element.requestFullscreen || element.mozRequestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\r\n\r\n\t\telement.requestFullscreen();\r\n\r\n\t} else {\r\n\r\n\t\telement.requestPointerLock();\r\n\r\n\t}\r\n}\r\n\r\nFlyControls.prototype.setMapReady=function(value){\r\n\tmapReady = value;\r\n};\r\n\r\nFlyControls.prototype.init=function(){\r\n\tvar havePointerLock = 'pointerLockElement' in document || 'mozPointerLockElement' in document || 'webkitPointerLockElement' in document;\r\n\r\n\tif ( havePointerLock ) {\r\n\r\n\t\tvar self = this;\r\n\t\tvar element = document.body;\r\n\r\n\t\tdocument.exitPointerLock = document.exitPointerLock ||\r\n\t\t\t   document.mozExitPointerLock ||\r\n\t\t\t   document.webkitExitPointerLock;\r\n\t\t\r\n\r\n\t\tvar pointerlockchange = function ( event ) {\r\n\r\n\t\t\tif(!mapReady)\r\n\t\t\t\treturn;\r\n\t\t\t\r\n\t\t\tif ( document.pointerLockElement === element || document.mozPointerLockElement === element || document.webkitPointerLockElement === element ) {\r\n\r\n\t\t\t\tcontrolsEnabled = true;\r\n\t\t\t\tcontrols.enabled = true;\r\n\r\n\t\t\t\t$(\"#output\").fadeOut(300);\r\n\r\n\r\n\t\t\t} else {\r\n\t\t\t\t$(\"#output\").fadeIn(300);\r\n\r\n\t\t\t\tself.updateURL();\r\n\r\n\t\t\t\tcontrols.enabled = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar pointerlockerror = function ( event ) {\r\n\t\t\t//instructions.style.display = '';\r\n\r\n\t\t}\r\n\r\n\t\t// Hook pointer lock state change events\r\n\t\tdocument.addEventListener( 'pointerlockchange', pointerlockchange, false );\r\n\t\tdocument.addEventListener( 'mozpointerlockchange', pointerlockchange, false );\r\n\t\tdocument.addEventListener( 'webkitpointerlockchange', pointerlockchange, false );\r\n\r\n\t\tdocument.addEventListener( 'pointerlockerror', pointerlockerror, false );\r\n\t\tdocument.addEventListener( 'mozpointerlockerror', pointerlockerror, false );\r\n\t\tdocument.addEventListener( 'webkitpointerlockerror', pointerlockerror, false );\r\n\r\n\t\tSceneUtils.getRenderer().domElement.addEventListener( 'mousedown', function ( event ) {\r\n\t\t\tif(mapReady)\r\n\t\t\t\tself.lock();\r\n\t\t}, false );\r\n\t\t$(\"#outputWrapper\").on( 'mousedown', function ( event ) {\r\n\t\t\tif(mapReady)\r\n\t\t\t\tself.lock();\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener( 'mouseup', function ( event ) {\r\n\t\t\tdocument.exitPointerLock();\r\n\t\t\tcontrols.enabled = false;\r\n\t\t}, false );\r\n\r\n\t\t\r\n\r\n\t} else {\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n    controls = new THREE.PointerLockControls( SceneUtils.getCamera(), 0.002 );\r\n    \t\r\n\tSceneUtils.getScene().add( controls.getObject() );\r\n\r\n    var onKeyDown = function ( event ) {\r\n\r\n\t\tswitch ( event.keyCode ) {\r\n\r\n\t\t\tcase 38: // up\r\n\t\t\tcase 87: // w\r\n\t\t\t\tmoveForward = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 37: // left\r\n\t\t\tcase 65: // a\r\n\t\t\t\tmoveLeft = true; break;\r\n\r\n\t\t\tcase 40: // down\r\n\t\t\tcase 83: // s\r\n\t\t\t\tmoveBackward = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 39: // right\r\n\t\t\tcase 68: // d\r\n\t\t\t\tmoveRight = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 32: // space\r\n\t\t\t\t// Used fo moving up in fly mode and jumping in FPS mode\r\n\t\t\t\tmoveUp = true;\r\n\t\t\t\t\r\n\t\t\t\t// Used for jumping in non-fly mode\r\n\t\t\t\tif ( canJump === true ){\r\n\t\t\t\t\tvelocity.y += speed;\r\n\t\t\t\t\tcanJump = false;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tvar onKeyUp = function ( event ) {\r\n\r\n\t\tswitch( event.keyCode ) {\r\n\r\n\t\t\tcase 38: // up\r\n\t\t\tcase 87: // w\r\n\t\t\t\tmoveForward = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 37: // left\r\n\t\t\tcase 65: // a\r\n\t\t\t\tmoveLeft = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 40: // down\r\n\t\t\tcase 83: // s\r\n\t\t\t\tmoveBackward = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 39: // right\r\n\t\t\tcase 68: // d\r\n\t\t\t\tmoveRight = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 32: // space\r\n\t\t\t\tmoveUp = false;\r\n\t\t\t\t//Allowing tapping space to mid air jump again\r\n\t\t\t\tcanJump = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tdocument.addEventListener( 'keydown', onKeyDown, false );\r\n\tdocument.addEventListener( 'keyup', onKeyUp, false );\r\n\r\n\traycaster = new THREE.Raycaster( new THREE.Vector3(), new THREE.Vector3( 0, - 1, 0 ), 0, bodyHeight );\r\n\r\n\treturn true;\r\n\t\r\n};\r\n\r\n\r\nmodule.exports = FlyControls;","var cameraOpts = {\r\n\tfov : 60,\tnear : 10, foglength:5000\r\n};\r\n\r\nvar scene, skyScene;\r\nvar camera, oCamera;\r\nvar currentCamera, skyCamera; \r\nvar renderer = null;\r\n\r\nvar collisions = [];\r\nvar nonCollisions = [];\r\nvar terrainChunks = [];\r\nvar lights = [];\r\n\r\nvar skyObjects = [];\r\n\r\nvar fogDistance = 0;\r\n\r\nvar renderCounter = 0;\r\n\r\nfunction traverseLODs( object ) {\r\n\tif ( object instanceof THREE.LOD ) {\r\n\t\tobject.update( camera );\r\n\t}\r\n}\r\n\r\nmodule.exports = {\r\n\tsetupScene : function() {\r\n\t\t/// Create scene instance\r\n\t\tscene = new THREE.Scene();\r\n\t\tskyScene = new THREE.Scene();\r\n\r\n\t\t/// Create a camera, aim and place it.\r\n\t\tvar sceneWidth = window.innerWidth;// -  $(\"#UI\").width();\r\n\r\n\t\tcurrentCamera = camera = new THREE.PerspectiveCamera(cameraOpts.fov,\r\n\t\t\tsceneWidth / window.innerHeight,\r\n\t\t\tcameraOpts.near, fogDistance );\r\n\r\n\t\tskyCamera = new THREE.PerspectiveCamera(cameraOpts.fov,\r\n\t\t\tsceneWidth / window.innerHeight,\r\n\t\t\tcameraOpts.near, 1000000);\r\n\t\t\t\r\n\t\t\t\t\r\n\r\n\t\t/// Add ambient lighting\r\n\t\t\r\n\t\tvar globalAmbient = new THREE.AmbientLight(0);\r\n\t\tscene.add(globalAmbient);\r\n\t\t\r\n\r\n\t\tvar directionalLight = new THREE.DirectionalLight( 0xffffff, 0.7 );\r\n\t\tdirectionalLight.position.set( 0, 0, 1 );\r\n\t\tscene.add( directionalLight );\r\n\t\t\r\n\r\n\t\tvar directionalLight = new THREE.DirectionalLight( 0xffffff, 0.3 );\r\n\t\tdirectionalLight.position.set( -1, 1, -1 );\r\n\t\tscene.add( directionalLight );\r\n\r\n\t\t//Fog\r\n\t\tscene.fog = new THREE.Fog(0xffffff, Math.max(1,fogDistance - cameraOpts.foglength), fogDistance);\r\n\r\n\t\t// LOD updates scene by itself before render is called, don't do it twice!\r\n\t\t//scene.matrixAutoUpdate = false;\r\n\t\t//scene.autoUpdate = false;\r\n\t\t\r\n\t\t/// Create canvas rendering output\r\n\t\trenderer = new THREE.WebGLRenderer({\r\n\t\t\t/*alpha:true*/\r\n\t\t\tsortObjects:false,\r\n\t\t\tstencil:false,\r\n\t\t\tpremultipliedAlpha:false,\r\n\t\t\tantialiasing: true ,\r\n\t\t\t//preserveDrawingBuffer:true\r\n\t\t});\r\n\t\trenderer.sortObjects = false;\r\n\t\trenderer.setSize(sceneWidth, window.innerHeight);\r\n\r\n\t\trenderer.autoClear = false;\r\n\r\n\t\trenderer.domElement.style.position = \"absolute\";\r\n\r\n\t\t/// Add renderer to html DOM\r\n\t\tdocument.body.appendChild(renderer.domElement);\r\n\r\n\t\t/// Listen to window size chaning\r\n\t\t$( window ).resize(this.resize);\r\n\r\n\t\tthis.render();\r\n\r\n\r\n\t},\r\n\r\n\tsetPerspective: function(){\r\n\t\tcurrentCamera = camera;\r\n\t\tthis.render();\r\n\t},\r\n\r\n\tsetOrthographic: function(l,r,t,b,n,f){\r\n\r\n\t\tvar sceneWidth = window.innerWidth;// -  ( $(\"#UI\").is(\":visible\") && $(\"#UI\").width() );\r\n\r\n\t\tvar aspect = sceneWidth / window.innerHeight;\r\n\r\n\t\tvar dx = Math.abs(l-r);\r\n\t\tvar dy = Math.abs(t-b);\r\n\r\n\t\tif( dx/dy < aspect ){\r\n\t\t\tvar targetDx = dy * aspect;\r\n\t\t\tvar fac = targetDx/(1.0*dx);\r\n\t\t\tl *= fac;\r\n\t\t\tr *= fac;\t\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar targetDy = dx / aspect;\r\n\t\t\tvar fac = targetDy/(1.0*dy);\r\n\t\t\tt *= fac;\r\n\t\t\tb *= fac;\t\r\n\t\t}\r\n\t\t\r\n\t\t///Margin\r\n\t\tvar m = 1.01;\r\n\t\tl*=m; r*=m; t*=m; b*=m;\r\n\r\n\t\toCamera = new THREE.OrthographicCamera(l,r,t,b,n,f);\r\n\t\toCamera.position.set( 0*(l+r)/2.0, -f/2.0, 0*(t+b)/2.0 );\r\n\t\toCamera.rotation.set(Math.PI/2.0,0,0,\"YXZ\");\t\t\r\n\r\n\t\t//this.applyCameraRotationTo(oCamera);\r\n\r\n\t\tcurrentCamera = oCamera;\r\n\r\n\t\tthis.render();\r\n\r\n\t},\r\n\r\n\tsetHSLa: function(h,s,l,a){\r\n\t\tvar dh = 0.2;\r\n\t\tfor(var i=0; i<5; i++){\r\n\t\t\tif(lights[i]){\r\n\t\t\t\tlights[i].color.setHSL(h,s,l);\r\n\t\t\t\tlights[i].intensity = a;\r\n\t\t\t\th=(h+dh)%1;\t\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tsetRenderVisible: function(value){\r\n\t\tif(value)\r\n\t\t\trenderer.domElement.style.display = \"block\";\r\n\t\telse\r\n\t\t\trenderer.domElement.style.display = \"none\";\r\n\t},\r\n\r\n\tapplyCameraRotationTo: function(o){\r\n\t\tif(camera.parent){\r\n\t\t\tvar rx = camera.parent.rotation.x;\r\n\t\t\tvar ry = camera.parent.parent.rotation.y;\r\n\t\t\to.rotation.set(rx,ry,0,\"YXZ\");\t\t\r\n\t\t}\r\n\t},\r\n\r\n\trender: function(){\r\n\t\tif(renderer !== null){\r\n\r\n\t\t\t/// Always update matrix\r\n\t\t\t//scene.updateMatrixWorld();\r\n\r\n\t\t\t/// Only calculate distances every n:th render\r\n\t\t\tif(++renderCounter == 10){\r\n\t\t\t\trenderCounter = 0;\r\n\t\t\t\tscene.traverse( traverseLODs );\r\n\t\t\t}\r\n\r\n\r\n\t\t\trenderer.clear(renderer.getClearColor());\r\n\r\n\t\t\t/// Render skybox\r\n\t\t\tif(camera == currentCamera){\r\n\t\t\t\tthis.applyCameraRotationTo(skyCamera);\r\n\t\t\t\trenderer.render(skyScene, skyCamera);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//this.applyCameraRotationTo(oCamera);\t\r\n\t\t\t}\r\n\r\n\t\t    /// Render everything else\r\n\t\t\trenderer.render(scene, currentCamera);\r\n\t\t}\r\n\t},\r\n\r\n\tclear: function(){\r\n\r\n\t\tcollisions.forEach(function(elem){\r\n\t\t\tscene.remove(elem);\r\n\t\t});\r\n\r\n\t\tnonCollisions.forEach(function(elem){\r\n\t\t\tscene.remove(elem);\r\n\t\t});\r\n\r\n\t\tlights.forEach(function(elem){\r\n\t\t\tscene.remove(elem);\r\n\t\t});\r\n\r\n\t\tskyObjects.forEach(function(elem){\r\n\t\t\tskyScene.remove(elem);\r\n\t\t});\r\n\t\t\r\n\t\tnonCollisions = [];\r\n\t\tcollisions = [];\r\n\t\tlights = [];\r\n\t\tskyObjects = [];\r\n\t\tterrainChunks = [];\r\n\t},\r\n\r\n\tresize: function(){\r\n\t\tvar sceneWidth = window.innerWidth;//-  ( $(\"#UI\").is(\":visible\") && $(\"#UI\").width() );\r\n\r\n\t\tcamera.aspect = sceneWidth / window.innerHeight;\r\n\t\tskyCamera.aspect = sceneWidth / window.innerHeight;\r\n\r\n\t\trenderer.setSize(sceneWidth, window.innerHeight);\r\n\r\n\t\tcamera.updateProjectionMatrix();\r\n\t\tskyCamera.updateProjectionMatrix();\r\n\r\n\r\n\t\tmodule.exports.render();\r\n\t},\r\n\r\n\tsetAmbientAdd: function(value){\r\n\t\tlights.forEach(\r\n\t\t\tfunction(elem){\r\n\t\t\t\tvar v = value;\r\n\t\t\t\tif(elem.added){\r\n\t\t\t\t\tv -= elem.added;\r\n\t\t\t\t}\r\n\t\t\t\tif(elem instanceof THREE.AmbientLight){\r\n\t\t\t\t\telem.color.addScalar(v);\r\n\t\t\t\t}\r\n\t\t\t\telem.added = value;\r\n\t\t\t}\r\n\t\t);\r\n\t\tmodule.exports.render();\r\n\t},\r\n\r\n\tsetFog: function(distance){\r\n\t\tfogDistance = distance;\r\n\t\tif(scene && scene.fog){\r\n\t\t\tscene.fog.far = distance;\r\n\t\t\tscene.fog.near = Math.max(1,distance - cameraOpts.foglength);\r\n\t\t}\r\n\t\tif(camera){\r\n\t\t\tcamera.far = distance;\r\n\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t\t/// Update terrain material\r\n\t\t\tterrainChunks.forEach(function(mesh){\r\n\t\t\t\tmesh.material.uniforms[\"fogNear\"].value = scene.fog.near;\r\n\t\t\t\tmesh.material.uniforms[\"fogFar\"].value = scene.fog.far;\r\n\t\t\t\tmesh.material.needsUpdate = true;\r\n\t\t\t})\r\n\t\t}\r\n\t\tthis.render();\r\n\t\t\r\n\t},\r\n\r\n\tshowProgressPanel: function(cb){\r\n\t\tvar pp = $(\"#progressPanel\");\r\n\r\n\t\tif(pp.is(\":visible\")){\r\n\t\t\tif(cb)\r\n\t\t\t\tcb();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tpp.find(\".progressTitle\").html(\"Loading\");\r\n\t\tpp.find(\".progress\").html(\"...\");\r\n\r\n\t\tthis.showPanel(pp, cb);\r\n\t},\r\n\r\n\tshowMapPanel: function(cb){\r\n\t\tthis.showPanel($(\"#mapPanel\"), cb);\r\n\t},\r\n\r\n\tshowPanel: function(panelIn, cb){\r\n\t\tvar currentPanel = $(\"#output\").find(\".ui-panel:visible\");\r\n\r\n\t\tthis.swapPanels(currentPanel, panelIn, true, cb);\r\n\r\n\t},\r\n\r\n\tswapPanels: function(panelOut, panelIn, dir, cb){\r\n\t\tvar t = 400 * 0;\r\n\t\tvar ease = \"swing\";\r\n\r\n\t\t/// Fix height\r\n\t\tpanelOut.parent().css({height:panelOut.parent().height()});\r\n\t\tpanelIn.removeClass(\"hidden\");\r\n\t\tvar h = panelIn.height();\r\n\t\tpanelIn.addClass(\"hidden\");\r\n\r\n\r\n\t\t/// Set slide in start values\r\n\t\tpanelIn.css({right:dir?-500:'auto', left:dir?'auto':-500});\r\n\r\n\t\t\r\n\t\t/// Current element slide out\r\n\t\tpanelOut.css({right:dir?-500:'auto'});\r\n\r\n\t\tvar animateOutProp, animateInProp;\r\n\t\tif(dir){\r\n\t\t\tanimateOutProp = {left:-500};\r\n\t\t\tanimateInProp = {right:0};\r\n\t\t}\r\n\t\telse{\r\n\t\t\tanimateOutProp = {right:-500};\r\n\t\t\tanimateInProp = {left:0};\r\n\r\n\t\t}\r\n\r\n\t\tpanelOut.animate(animateOutProp, t, ease, function(){\r\n\r\n\t\t\t/// Hide Current element\r\n\t\t\tpanelOut.addClass(\"hidden\");\r\n\r\n\t\t\t/// Parent height\r\n\t\t\tpanelOut.parent().animate({height:h}, t/2.0, ease, function(){\t\t\t\r\n\r\n\t\t\t\t/// Slide in next element\r\n\t\t\t\tpanelIn.removeClass(\"hidden\");\r\n\t\t\t\tpanelIn.animate(animateInProp, t, ease, cb);\r\n\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t},\r\n\r\n\tgetScene: function(){ return scene; },\r\n\tgetSkyScene: function(){ return skyScene; },\r\n\tgetCamera: function(){ return camera; },\r\n\tgetRenderer: function(){ return renderer; },\r\n\tgetCollisions: function(){ return collisions; },\r\n\tgetNonCollisions: function(){ return nonCollisions; },\r\n\tgetTerrainChunks: function(){ return terrainChunks; },\r\n\tgetSkyObjects: function(){ return skyObjects; },\r\n\tgetLights: function(){ return lights; }\r\n}; \r\n","///  ----- Includes  ----- \r\nvar UI =  require(\"./UI.js\");\r\nvar SceneUtils = require(\"./SceneUtils.js\");\r\nvar FlyControls =  require(\"./FlyControls.js\");\r\n\r\n\r\n/**\r\n * Tyria 3D Web application\r\n * \r\n * The tyria3d.com web UI\r\n *\r\n * @main Tyria3DApp\r\n * @class Tyria3DApp\r\n * @static \r\n */\r\nvar Tyria3DApp = module.exports = function() {\r\n\r\n\tthis.map;\r\n\tthis.stats;\r\n\tthis.controller;\r\n\tthis.hasPointerLock;\r\n\tthis.ui;\r\n\r\n\tthis.lastTs = -1;\r\n\tthis.animating = false;\r\n\tthis.localReader = null;\r\n\tthis._mapRect = null;\r\n\tthis.mapAutoLoad = null;\r\n\r\n\tthis.animationTime = 350 * 0;\r\n\r\n\t/// Run UI stuff when document is rdy\r\n\t$(document).ready(this.onDocumentReady.bind(this));\r\n\r\n\t/**\r\n\t * @method initAnim\r\n\t */\r\n\tthis.initAnim = function(){\r\n\t\tvar self =  this;\r\n\t\t$(\".content  h1\").first().animate({\"margin-top\":20}, self.animationTime);\r\n\t\t$(\"nav\").slideUp(self.animationTime,function(){\r\n\t\t\t$(\"#intro\").delay(self.animationTime).fadeOut(self.animationTime,self.init.bind(self));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @method init\r\n\t */\r\n\tthis.init = function(){\r\n\t\tvar self = this;\r\n\r\n\t\tthis.mapAutoLoad = parseUri(window.location.hash.slice(1));\r\n\t\tconsole.log(this.mapAutoLoad);\r\n\r\n\t\t// Hide intro div\r\n\t\t$(\"#intro\").hide();\t\r\n\r\n\t\t/// Add stats (toggled by pressing \"i\")\r\n\t\tthis.stats = new Stats();\r\n\t\t$(\"body\").append( this.stats.domElement );\r\n\r\n\t\t/// Create fly controls, initare after UI DOM has been added.\r\n\t\tthis.controller = new FlyControls();\r\n\r\n\t\t/// Set up UI\r\n\t\tthis.ui = new UI( $(\"body\"), this.controller, this.loadMap.bind(self) );\r\n\t\tthis.ui.init();\r\n\r\n\t\t/// Create file picker, used to pick DAT file\r\n\t\tvar filePicker = $(\"<input type='file' class='hidden' />\");\r\n\t\tvar fileIcon = $(\"<button id='fileInputIcon' tabindex='-1'>Select a Guild Wars 2 .dat file</button>\");\r\n\t\tfileIcon.click(function () {\r\n\t\t    filePicker.trigger('click');\r\n\t\t});\r\n\t\t\r\n\t\t/// .dat file received from the file input, entry point!\r\n\t\tvar onReceiveFile = function(evt){\r\n\t\t\t\r\n\t\t\t/// Get loaded file reference from event\r\n\t\t\t///TODO: Check file length etc.\r\n\t\t\tvar files = evt.target.files;\r\n\t\t\tvar file = files[0];\r\n\r\n\t\t\tfilePicker.val('');\r\n\t\t\t\r\n\t\t\t/// Get a local reader\r\n\t\t\tself.localReader = T3D.getLocalReader(file, function(){\r\n\t\t\t\t\r\n\t\t\t\t/// Get the maps in the dat and put them in the UI.\r\n\t\t\t\t/// Show progress panel during load.\r\n\t\t\t\tSceneUtils.showProgressPanel(function(){\t\t\r\n\t\t\t\r\n\t\t\t\t\t$(\"#output\").find(\".progressTitle\").html(\"Finding maps (first visit only)\");\r\n\t\t\t\t\t$(\"#output\").find(\".progress\").html(\"initializing\");\r\n\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t\tT3D.getMapListAsync(self.localReader, self.applyMapList.bind(self), false);\r\n\t\t\t\t\t},10);\r\n\t\t\t\t});\r\n\t\t\t}, undefined, undefined, \"js/T3D/t3dworker.js\");\r\n\r\n\t\t\t// SAVE MAP CODE WAS HERE\r\n\r\n\t\t};\r\n\r\n\t\t/// Add listener to file input\r\n\t\tfilePicker.change(onReceiveFile);\r\n\r\n\t\t/// Append file input elements to the DOM\r\n\t\t$(\"#filePanel\").append(filePicker);\r\n\t\t$(\"#filePanel\").append(fileIcon);\r\n\r\n\t\t/// Build deep map search interface\r\n\t\tvar deepSearchButton = $(\"<span class='link'>Scan all .dat entries for maps</span>\");\r\n\t\tdeepSearchButton.click( function(evt){\r\n\t\t\tif ( confirm(\r\n\t\t\t\t\t\"Searching the full .dat file will take roughly 10 minutes depending on file size.\\n\\n\"+\r\n\t\t\t\t\t\"Once complete the results will be stored locally and available every time you load this .dat.\\n\\n\"+\r\n\t\t\t\t\t\"Note that the vast majority of maps are probably already loaded.\"+\r\n\t\t\t\t\t\"Are you sure you want to search the .dat for maps?\"\r\n\t\t\t\t) ) {\r\n\r\n\t\t\t\tSceneUtils.showProgressPanel(function(){\t\t\r\n\t\t\t\r\n\t\t\t\t\t$(\"#output\").find(\".progressTitle\").html(\"Finding maps (first visit only)\");\r\n\t\t\t\t\t$(\"#output\").find(\".progress\").html(\"initializing\");\r\n\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t\tT3D.getMapListAsync(self.localReader, self.applyMapList, true);\r\n\t\t\t\t\t},10);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} );\r\n\r\n\t\t/// Append deep search elements to the DOM\r\n\t\tvar searchParagraph = $(\"<p class='instruction'>Missing maps? </p>\");\r\n\t\tsearchParagraph.append(deepSearchButton);\r\n\t\t$(\"#mapPanel\").append(searchParagraph);\r\n\r\n\t\t/// Key listeners connected to UI (toggle UI panel and stats)\r\n\t\tdocument.addEventListener( 'keydown', this.keyDownListener, false );\r\n\t\tdocument.addEventListener('mousewheel',this.mouseWheelListener, false); \r\n\r\n\t\t/// Set up scene holding visible objects, lights, camera and renderer.\r\n\t\tSceneUtils.setupScene();\r\n\r\n\t\t/// Keep rendered hidden until map is ready to render.\r\n\t\tSceneUtils.setRenderVisible(false);\r\n\t\t\r\n\t\t/// Initiate controlls, connection them to the scene.\r\n\t\tthis.hasPointerLock = this.controller.init();\r\n\r\n\t};\r\n\r\n\r\n\r\n\t/**\r\n\t * Called when a map is specified via the drop down\r\n\t * @method loadMap\r\n\t * @param  {[type]} fileName [description]\r\n\t * @param  {[type]} absolute [description]\r\n\t * @return {[type]}          [description]\r\n\t */\r\n\tthis.loadMap = function(fileName, absolute){\r\n\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tvar showHavok;\r\n\t\tif( self.mapAutoLoad.showHavok != undefined ) {\r\n\t\t\tshowHavok = self.mapAutoLoad.showHavok;\r\n\t\t\t$(\"#showHavok\").prop(\"checked\", showHavok);\r\n\t\t} else {\r\n\t\t\tshowHavok = $(\"#showHavok\").prop(\"checked\");\r\n\t\t}\r\n\r\n\t\tvar loadProp;\r\n\t\tif( self.mapAutoLoad.loadProp != undefined ) {\r\n\t\t\tloadProp = self.mapAutoLoad.loadProp;\r\n\t\t\t$(\"#loadProp\").prop(\"checked\", loadProp);\r\n\t\t} else {\r\n\t\t\tloadProp = $(\"#loadProp\").prop(\"checked\");\r\n\t\t}\r\n\t\t\t\r\n\t\tvar loadZone;\r\n\t\tif( self.mapAutoLoad.loadZone != undefined ) {\r\n\t\t\tloadZone = self.mapAutoLoad.loadZone;\r\n\t\t\t$(\"#loadZone\").prop(\"checked\", loadZone);\r\n\t\t} else {\r\n\t\t\tloadZone = $(\"#loadZone\").prop(\"checked\");\r\n\t\t}\r\n\r\n\t\t/// Pop up the progres panel\r\n\t\tSceneUtils.showProgressPanel(function(){\r\n\r\n\t\t\t/// Disable controller and hide rendered during load\r\n\t\t\tself.controller.setMapReady(false);\r\n\t\t\tSceneUtils.setRenderVisible(false);\r\n\r\n\t\t\t/// Set up renderers\r\n\t\t\tvar renderers = [\r\n\t\t\t\t{\r\n\t\t\t\t\trenderClass: T3D.HavokRenderer,\r\n\t\t\t\t\tsettings:{\r\n\t\t\t\t\t\tvisible: showHavok\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\trenderClass: T3D.EnvironmentRenderer,\r\n\t\t\t\t\tsettings:{}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\trenderClass: T3D.TerrainRenderer,\r\n\t\t\t\t\tsettings:{\r\n\t\t\t\t\t\tanisotropy : SceneUtils.getRenderer().getMaxAnisotropy()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t];\r\n\r\n\t\t    if( loadZone ){\r\n\t\t    \trenderers.push({\r\n\t\t    \t\trenderClass: T3D.ZoneRenderer,\r\n\t\t    \t\tsettings:{}\r\n\t\t    \t});\r\n\t\t    }\r\n\t\t    if( loadProp ){\r\n\t\t    \trenderers.push({\r\n\t\t    \t\trenderClass: T3D.PropertiesRenderer,\r\n\t\t    \t\tsettings:{}\r\n\t\t    \t});\r\n\t\t    }\r\n\r\n\t\t\t/// Call map renderer in order to get all 3d objects\r\n\t\t\tT3D.renderMapContentsAsync(self.localReader, fileName, renderers, self.onMapLoaded.bind(self));\r\n\r\n\t\t});\t\r\n\t}\r\n\r\n\t/**\r\n\t * Callback to transfer the parsed data to three-js\r\n\t * @return {void}\r\n\t */\r\n\tthis.onMapLoaded = function(mapData){\r\n\t\t/// Clear scene\r\n\t\tSceneUtils.clear();\r\n\r\n\t\t//ZoneRenderer\r\n\t\tif(mapData.ZoneRenderer != undefined){\r\n\t\t\tmapData.ZoneRenderer.meshes.forEach(function(elem){\r\n\t\t\t\tSceneUtils.getScene().add(elem); //Visible\r\n\t\t\t\tSceneUtils.getNonCollisions().push(elem);\r\n\t\t\t});\t\r\n\t\t}\r\n\r\n\t\t//PropertiesRenderer\r\n\t\tif(mapData.PropertiesRenderer != undefined){\r\n\t\t\tmapData.PropertiesRenderer.meshes.forEach(function(elem){\r\n\t\t\t\tSceneUtils.getScene().add(elem); //Visible\r\n\t\t\t\tSceneUtils.getNonCollisions().push(elem);\r\n\t\t\t});\t\r\n\t\t}\r\n\r\n\t\tmapData.EnvironmentRenderer.skyElements.forEach(function(elem){\r\n\t\t\tSceneUtils.getSkyScene().add(elem);\r\n\t\t\tSceneUtils.getSkyObjects().push(elem);\r\n\t\t});\t\t\r\n\t\t\r\n\t\t/// Add terrain tiles to a special list\r\n\t\t/// ( these need their fog updated in a specific way ).\r\n\t\tmapData.TerrainRenderer.terrainTiles.forEach(function(elem){\r\n\t\t\tSceneUtils.getScene().add(elem); //Visible\r\n\t\t\tSceneUtils.getTerrainChunks().push(elem); //Terrain\r\n\t\t\tSceneUtils.getCollisions().push(elem); //Collision\r\n\t\t});\t\r\n\r\n\t\tSceneUtils.getScene().add(mapData.TerrainRenderer.water);\r\n\t\tSceneUtils.getNonCollisions().push(mapData.TerrainRenderer.water); //Water\r\n\r\n\t\t/// Add all collisions to a special list\r\n\t\tif(mapData.HavokRenderer != undefined){\r\n\t\t\tmapData.HavokRenderer.meshes.forEach(function(elem){\r\n\t\t\t\tSceneUtils.getScene().add(elem);\r\n\t\t\t\tSceneUtils.getCollisions().push(elem);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/// Add lights\r\n\t\tmapData.EnvironmentRenderer.lights.forEach(function(elem){\r\n\t\t\tSceneUtils.getScene().add(elem);\r\n\t\t\tSceneUtils.getLights().push(elem);\r\n\t\t});\r\n\r\n\t\t/// Set haze color \r\n\t\tvar hazeColor = mapData.EnvironmentRenderer.hazeColor;\r\n\t\tvar color = new THREE.Color(hazeColor[2]/255.0, hazeColor[1]/255.0, hazeColor[0]/255.0);\r\n\t\tSceneUtils.getRenderer().setClearColor( color, 1.0 );\r\n\t\tSceneUtils.getScene().fog.color.copy(color);\r\n\r\n\t\t/// Store bounds locally in order to display orto cam correctly\r\n\t\t_mapRect = mapData.TerrainRenderer.bounds;\r\n\r\n\t\t/// Enable UI\r\n\t\tthis.controller.setMapReady(true);\r\n\t\t$(\"#UI\").removeClass(\"hidden\");\r\n\r\n\t\t/// Set ambient light slider to 50% if there were no parsed lights in the map data.\r\n\t\t$(\"#ambientSlider\").slider(\"value\",mapData.EnvironmentRenderer.hasLight ? 0 : 0.5);\r\n\r\n\t\t/// Set view dist after all objects are in place\r\n\t\t$(\"#fogSlider\").slider(\"value\",35000);\r\n\r\n\t\t/// Data Renderer is done start animating!\r\n\t\tif(this.hasPointerLock){\r\n\t\t\tSceneUtils.showPanel($(\"#suspendedPanel\"));\r\n\t\t}\r\n\t\telse{\r\n\t\t\tSceneUtils.showPanel($(\"#errorPanel\"));\r\n\t\t}\r\n\t\t\r\n\t\t/// Set camera position\r\n\t\tvar controls = this.controller.getControls();\r\n\t\tcontrols.getObject().position.set(0, mapData.TerrainRenderer.bounds ? mapData.TerrainRenderer.bounds.y2 : 0, 0);\r\n\t\tcontrols.getPitchObject().rotation.x = -Math.PI/2;\r\n\t\t\r\n\t\t//Replace camera from autoload\r\n\t\tif(this.mapAutoLoad.x != undefined && this.mapAutoLoad.y != undefined && this.mapAutoLoad.z != undefined) {\r\n\t\t\tcontrols.getObject().position.set(this.mapAutoLoad.x, this.mapAutoLoad.y, this.mapAutoLoad.z);\r\n\t\t}\r\n\t\tif(this.mapAutoLoad.yaw != undefined && this.mapAutoLoad.pitch != undefined) {\r\n\t\t\tcontrols.getPitchObject().rotation.x = this.mapAutoLoad.pitch;\r\n\t\t\tcontrols.getObject().rotation.y = this.mapAutoLoad.yaw;\r\n\t\t}\r\n\r\n\t\t//Clean the autoload\r\n\t\tthis.mapAutoLoad = {};\r\n\r\n\t\t// Initial render, indep. of controller being active\r\n\t\tSceneUtils.render();\r\n\r\n\r\n\t\t// Show canvas\r\n\t\tSceneUtils.setRenderVisible(true);\r\n\r\n\t\t/// Animate scene\r\n\t\tif(!this.animating){\r\n\t\t\tthis.animating = true;\r\n\t\t\tthis.animate(0);\t\r\n\t\t}\r\n\r\n\t\tthis.controller.updateURL();\r\n\r\n\t}//End onload callback\r\n\r\n\r\n\t/**\r\n\t * @method  applyMapList\r\n\t * @param  {[type]} mapList [description]\r\n\t * @return {[type]}         [description]\r\n\t */\r\n\tthis.applyMapList = function(mapList){\r\n\t\tvar self = this;\r\n\r\n\t\tthis.mapAutoLoad = parseUri(window.location.hash.slice(1));\r\n\r\n\t\t/// Update picker elements\r\n\t\tvar picker = $(\"#mapPicker\");\r\n\t\tpicker.empty();\r\n\t\tpicker.append($(\"<option selected='true' disabled='disabled'>Pick Map</option>\")); \r\n\t\t\r\n\r\n\t\tvar compareName = function(a, b) {\r\n\t\t\tif (a.name < b.name)\r\n\t\t\t    return -1;\r\n\t\t\tif (a.name > b.name)\r\n\t\t\t    return 1;\r\n\t\t\treturn 0;\r\n\t\t};\r\n\r\n\t\tmapList.maps.sort(compareName);\r\n\t\t\r\n\t\tmapList.maps.forEach(function(g){\r\n\t\t\tvar group = $(\"<optgroup label='\"+g.name+\"' />\");\r\n\t\t\tpicker.append(group);\r\n\r\n\t\t\tg.maps.sort(compareName);\r\n\t\t\tg.maps.forEach(function(m){\r\n\t\t\t\tgroup.append(\"<option value='\"+m.fileName+\"'>\"+m.name+\"</option>\");\r\n\t\t\t});\r\n\t\t\t\r\n\t\t});\r\n\r\n\t\tSceneUtils.showMapPanel();\r\n\t\t\r\n\t\t//If there is some map autoloading we check if the map have been detected then trigger the load event\r\n\t\tif(self.mapAutoLoad['map'] != undefined){\r\n\t\t\t$(\"#mapPicker option\").each(function(){\r\n\t\t\t\tif(self.mapAutoLoad['map'] == this.value){\r\n\t\t\t\t\tvar e = $.Event(\"change\");\r\n\t\t\t\t\t$(\"#mapPicker\").val(this.value);\r\n\t\t\t\t\t$(\"#mapPicker\").trigger(e);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tthis.mouseWheelListener = function(evt){\r\n\t\tvar dir = Math.sign(evt.wheelDelta);\r\n\t\tvar s = $(\"#moveSpeedSlider\");\r\n\t\tvar min =  s.slider(\"option\",\"min\")\r\n\t\tvar max = s.slider(\"option\",\"max\") \r\n\t\tvar range =max - min;\r\n\t\t\r\n\t\tvar val = range*dir*0.05 + s.slider( \"option\", \"value\" );\r\n\t\tval = Math.min(max,val);\r\n\t\tval = Math.max(min,val);\r\n\r\n\t\ts.slider(\"option\", \"value\", val);\r\n\t}\r\n\r\n\t/**\r\n\t * Main \"game\" loop, called trough requestAnimationFrame\r\n\t * @param  {[type]} timestamp [description]\r\n\t * @return {[type]}           [description]\r\n\t */\r\n\tthis.animate = function(timestamp) {\r\n\t\t\r\n\t\t/// Get time step\r\n\t\tvar delta = timestamp - this.lastTs;\r\n\t\tif(delta > 0){\r\n\t\t\t\r\n\t\t\tthis.lastTs = timestamp;\r\n\r\n\t\t\t/// Update current controller\r\n\t\t\tif( this.controller.update(delta*0.001) ){\r\n\r\n\t\t\t\t/// If controller returns true, render\r\n\t\t\t\tSceneUtils.render();\r\n\t\t\t}\r\n\r\n\t\t\t/// Update stats (FPS etc)\r\n\t\t\tthis.stats.update();\r\n\r\n\t\t}\r\n\r\n\t\twindow.requestAnimationFrame( this.animate.bind(this) );\r\n\t}\r\n\r\n\t/**\r\n\t * Settings and debugging key listener\r\n\t * @method keyDownListener\r\n\t * @param  {[type]} evt [description]\r\n\t * @return {[type]}     [description]\r\n\t */\r\n\tthis.keyDownListener = function(evt){\r\n\t\tif(evt.keyCode == 85){ // U\r\n\t\t\t$(\"#UI\").toggle();\r\n\t\t\tSceneUtils.resize();\r\n\t\t}\r\n\t\tif(evt.keyCode == 73){ // I\r\n\t\t\t$(\"#stats\").toggle();\r\n\t\t}\r\n\t\tif(evt.keyCode == 80){ // P\r\n\t\t\tSceneUtils.setPerspective();\r\n\t\t}\r\n\t\tif(evt.keyCode == 79){ // O\r\n\r\n\t\t\tvar r = _mapRect;\r\n\t\t\tif(r){\r\n\t\t\t\tvar xMin = r.x1;\r\n\t\t\t\tvar xMax = r.x2;\r\n\t\t\t\tvar yMin = r.y1;\r\n\t\t\t\tvar yMax = r.y2;\r\n\t\t\t\tSceneUtils.setOrthographic(xMin, xMax, yMin, yMax, 100000, -100000);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(evt.keyCode == 70){ // F\r\n\t\t\t$(\"#flyInput\").trigger('click');\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\nTyria3DApp.prototype.onDocumentReady = function(){\r\n\r\n\tconsole.log(\"Tyria 3D API version \"+T3D.version);\r\n\tvar self = this;\r\n\r\n\t/// Detect Chrome and WebGL\r\n\t//var is_chrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\r\n\tvar hasWebGL = T3D.hasWebGL();\r\n\r\n\t/// Hide blinking loader\r\n\t$(\"#frontpageLoader\").addClass(\"hidden\");\r\n\r\n\t/// Display error message for missing WebGL\r\n\tif (!window.WebGLRenderingContext || !hasWebGL) {\r\n    \t$(\"#errorGL\").removeClass(\"hidden\");\r\n  \t}\r\n\r\n  \t/// Display error message for non-Chrome browsers\r\n  \t// else if(!is_chrome){\r\n  \t// \t$(\"#errorChrome\").removeClass(\"hidden\");\r\n  \t// }\r\n\r\n  \t/// If everyting is ok, enable the button that shows the file picker.\r\n  \telse{\r\n\t\tif(window.location.hash.length > 1 ){\r\n\t\t\tself.initAnim();\r\n\t\t}\r\n\t\t$(\"#ILoveYouDiddi\").removeClass(\"hidden\").one(\"click\",self.initAnim.bind(self));\r\n  \t}\r\n}\r\n\r\nfunction parseUri(uri){\r\n\tvar data = uri.split(\"&\");\r\n\tvar result = {};\r\n\tif(uri.length < 1) { return result; };\r\n\tfor(elt of data){\r\n\t\telt = elt.split(\"=\");\r\n\t\tif(elt[1] == \"true\" || elt[1] == \"false\"){\r\n\t\t\tresult[elt[0]] = (elt[1] == \"true\");\r\n\t\t} else {\r\n\t\t\tresult[elt[0]] = Number(elt[1]);\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n}\r\n\r\n/// Starting point\r\nvar App = new Tyria3DApp();","//var T3D = require(\"../../../vendor/T3D/T3D-1.0.3.js\");\r\nvar SceneUtils = require(\"./SceneUtils\");\r\n\r\nvar tShort = 200 * 0;\r\nvar tLong = 500 * 0;\r\n\r\n\r\nvar UI = function(holder, controller, loadMap){\r\n\tthis.holder = holder;\r\n\tthis.controller = controller;\r\n\tthis.loadMap = loadMap;\r\n};\r\n\r\nUI.prototype.selectMap=function(mapListObject){\r\n\t$(\"#mapPicker option\").filter(function() {\r\n\t    return $(this).val() == mapListObject.fileName; \r\n\t}).prop('selected', true);\r\n\t$(\"#mapPicker\").change();\r\n};\r\n\r\nUI.prototype.logProgress = function(){\r\n\tif(!UI.op)\r\n\t\tUI.op = $(\"#output\");\r\n\t\r\n\t/// Hack to keep the message about first time up.\r\n\tif( arguments[0] != \"Find type\")\r\n\t\tUI.op.find(\".progressTitle\").html(arguments[0]);\r\n\r\n\tif(parseFloat(arguments[1])){\r\n\t\tUI.op.find(\".progress\").html(arguments[1]+\"%\");\t\r\n\t}\r\n\telse{\r\n\t\tUI.op.find(\".progress\").html(arguments[1]);\t\r\n\t}\r\n\t\r\n}\r\n\r\nUI.prototype.init=function(){\r\n\tvar self = this;\r\n\r\n\t/// Connect to T3D\r\n\tT3D.Logger.logFunctions[T3D.Logger.TYPE_PROGRESS] = this.logProgress;\r\n\tT3D.Logger.logFunctions[T3D.Logger.TYPE_DEBUG] = function(){};\r\n\r\n\t/// Main UI\r\n\tvar $UI = $(\"<div id='UI' class='diagonalBG hidden' />\");\r\n\t\r\n\tthis.holder.append($UI);\r\n\r\n\t\r\n\r\n\t/// Messages output\r\n\tvar outputWrapper = $(\"<div id='outputWrapper'/>\");\r\n\toutputWrapper.css({top:-500}).delay(tShort).animate({top:0},tLong);\r\n\tvar output = $(\"<div id='output' class='diagonalBG'/>\");\r\n\t\r\n\toutputWrapper.append(output);\r\n\tthis.holder.append(outputWrapper);\r\n\r\n\t/// File picker\r\n\toutput.append($(\r\n\t\t\"<div class='ui-panel' id='filePanel'>\"+\r\n\t\t\"<p class='title'>\"+\r\n\t\t\"<span class='titleLink homeLink'>Home</span>\"+\r\n\t\t\"<span class='titleSeparator'> &#187 </span>\"+\r\n\t\t\"File\"+\r\n\t\t\"<span class='titleSeparator'> &#187 </span>\"+\r\n\t\t\"<span class='titleInactive'>Map</span>\"+\r\n\t\t\"</p>\"+\r\n\t\t\"<p class='instruction'>\"+\r\n\t\t\t\"Tyria 3D reads data from the Guild Wars 2 <span class='hightlight'>.dat file</span>. This file contains all the assets used to run the game and is located\"+\r\n\t\t\t\" in the Guild Wars 2 install directory, the same directory that the game executable is located in.\"+\r\n\t\t\"</p>\"+\r\n\t\t\"</div>\"\r\n\t));\r\n\r\n\r\n\t// Progress and mesages\r\n\tvar progressOutput = $(\"<div class='ui-panel hidden' id='progressPanel'>\"+\r\n\t\t\"<p class='progressTitle'></p>\"+\r\n\t\t\"<p class='progress'></p>\"+\r\n\t\t\"</div>\");\r\n\toutput.append(progressOutput);\r\n\r\n\tvar errorOutput = $(\"<div class='ui-panel hidden' id='errorPanel'>\"+\r\n\t\t\"Your browser doesn\\'t seem to support Pointer Lock API, \"+\r\n\t\t\"navigating the map will not be possible.<br/><br/>Pro tip: \"+\r\n\t\t\"<a href='https://www.google.com/chrome/browser/desktop/index.html' target='_blank'>\"+\r\n\t\t\"Donwload Google Chrome</a>.\"+\r\n\t\t\"</div>\");\r\n\toutput.append(errorOutput);\r\n\r\n\tvar suspendedPanel = $(\"<div class='ui-panel hidden' id='suspendedPanel'>\"+\r\n\t\t\t\"This view is suspended until you<br/><br/> \"+\r\n\t\t\t\"<strong>click and hold</strong> to look around<br /><br/>\"+\r\n\t\t\t\"or<br/><br />click the <strong>Lock Mouse</strong> button<br/><br/>\"+\r\n\t\t\t\"When this view is active, use <strong>W A S D</strong> and <strong>space</strong> to move and jump + air jump\"+\r\n\t\t\"</div>\");\r\n\toutput.append(suspendedPanel);\r\n\r\n\r\n\t// Map opts\r\n\tvar mapOpts = $(\"<div class='ui-panel hidden' id='mapPanel'>\"+\r\n\t\t\"<p class='title'>\"+\r\n\t\t\"<span class='titleLink homeLink'>Home</span>\"+\r\n\t\t\"<span class='titleSeparator'> &#187 </span>\"+\r\n\t\t\"<span id='mapBack' class='titleLink'>File</span>\"+\r\n\t\t\"<span class='titleSeparator'> &#187 </span>\"+\r\n\t\t\"Map\"+\r\n\t\t\"</p>\"+\r\n\t\t\"<p class='instruction' style='margin-bottom:0;'>\"+\r\n\t\t\t\"Select what data to load and pick a <span class='highlight'>Map</span>.\"+\r\n\t\t\"</p>\"+\t\t\r\n\t\t\"</div>\");\r\n\r\n\toutput.append(mapOpts);\r\n\r\n\t$(\"#mapBack\").click(function(evt){\r\n\t\tSceneUtils.swapPanels($(\"#mapPanel\"), $(\"#filePanel\"));\r\n\t});\r\n\r\n\t$(\".homeLink\").click(function(){\r\n\t\tlocation.reload();\r\n\t});\r\n\r\n\r\n\r\n\r\n\t/// UI to select what to load\r\n\tmapOpts.append($(\r\n\t\t\r\n\t\t\t\"<label class='noselect'>\"+\r\n\t\t\t\t\"<p class='label'>Zone Models</p>\"+\r\n\t\t\t\t\"<input type='checkbox' id='loadZone' tabindex='-1' />\"+\r\n\t\t\t\"</label>\"+\r\n\t\t\t\"<label class='noselect '>\"+\r\n\t\t\t\t\"<p class='label'>Prop Models</p>\"+\r\n\t\t\t\t\"<input type='checkbox' id='loadProp' tabindex='-1' checked='checked' />\"+\r\n\t\t\t\t//\"<input type='checkbox' id='loadProp' tabindex='-1' />\"+\r\n\t\t\t\"</label>\"+\r\n\t\t\t\"<label class='noselect '>\"+\r\n\t\t\t\t\"<p class='label'>Visible collision</p>\"+\r\n\t\t\t\t\"<input type='checkbox' id='showHavok' tabindex='-1' />\"+\r\n\t\t\t\"</label><br/>\"\r\n\t));\r\n\r\n\t\r\n\t/// UI to pick map file\r\n\tvar picker = $(\"<select id='mapPicker' tabindex='-1'/>\");\r\n\tpicker.append($(\"<option selected='true' disabled='disabled'>No .dat loaded</option>\")); \r\n\t\r\n\t\r\n\tT3D.MapFileList.maps.forEach(function(g){\r\n\t\tvar group = $(\"<optgroup label='\"+g.name+\"' />\");\r\n\t\tpicker.append(group);\r\n\t\tg.maps.forEach(function(m){\r\n\t\t\tgroup.append(\"<option value='\"+m.fileName+\"'>\"+m.name+\"</option>\");\r\n\t\t});\r\n\t\t\r\n\t});\r\n\t\r\n\r\n\tpicker.change(function(evt){\r\n\t\tvar val = picker.val();\r\n\t\tself.loadMap(val, evt.value);\r\n\r\n\t\tvar label = $(\"#mapPicker option\").filter(function() {\r\n\t    \treturn $(this).val() == val; \r\n\t\t}).html();\r\n\t\t$(\"#mapTitle\").html(label);\r\n\r\n\r\n\t\tpicker.blur();\r\n\t});\r\n\tmapOpts.append(picker);\t\r\n\r\n\r\n\tmapOpts.append( $(\"<p class='instruction'>\"+\r\n\t\t\t\"Enabling <span class='highlight'>Zone Models</span> allows you to view trees, plants and various 'nature' models. \"+\r\n\t\t\r\n\t\t\"</p><p class='instruction'>\"+\r\n\t\t\t\"Enabling <span class='highlight'>Prop Models</span> allows you to view most of the models in a map. \"+\r\n\t\t\r\n\t\t\"</p><p class='instruction'>\"+\t\r\n\t\t\t\"Enabling <span class='highlight'>Visible collision</span> allows you to view all the collision data in a map. \"+\r\n\t\t\t\" The collision data has no textures but will give you a hint of how the map looks with actual models,\"+\r\n\t\t\t\" consider enabling only Visible collision to reduce map loading times. \"+\r\n\t\t\t\" If you enabled Zone Models or Prop Models you probably don't want Visible collision.\"+\r\n\t\t\"</p>\") );\r\n\r\n\t/// END Map Picker\r\n\r\n\r\n\t// Move opts\r\n\tvar movementOpts = $(`<div class='ui-panel' id='optionsPanel'>\r\n\t\t\t<p class='title' id='mapTitle'></p>\r\n\t\t\t<p id='showMapSelection' class='optionsLink' tabindex='-1'>Back to map selection</p>\r\n\t\t\t\r\n\t\t\t<div>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<span class='label'>View distance:</span><br/>\r\n\t\t\t\t<div class='slider' id='fogSlider' tabindex='-1'></div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div>\r\n\t\t\t\t<span class='label'>&#128161;:</span>\r\n\t\t\t\t<div class='slider' id='ambientSlider' tabindex='-1'></div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div>\r\n\t\t\t\t<span class='label'>Speed [Scroll Up/Down]:</span>\r\n\t\t\t\t<div class='slider' id='moveSpeedSlider' tabindex='-1'></div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div>\r\n\t\t\t\t<span class='label'>Mouse sensitivity:</span>\r\n\t\t\t\t<div class='slider' id='mouseSensSlider' tabindex='-1'></div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div>\r\n\t\t\t\t<label class='noselect halfLabel'><p class='label'>Fly [F]</p>\r\n\t\t\t\t<input id='flyInput' type='checkbox' tabindex='-1' checked='checked'></input></label>\r\n\t\t\t\t<label class='noselect halfLabel'><p class='label'>Invert mouse</p>\r\n\t\t\t\t<input id='invertInput' type='checkbox' tabindex='-1'></input></label>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<p class='uiText'>Toggle UI [U], Toggle Stats [I], Orthographic Cam [O], Perspective Cam [P]</p>\r\n\t\t\t<button id='mouseLockBtn' tabindex='-1'>Lock Mouse</button>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<label class='hidden'><p class='label nomargin'>Location URL</p>\t\r\n\t\t\t<input class='hidden' id='locationInput' type='text'></input></label>\t\r\n\t\t</div>`);\r\n\r\n    $UI.append(movementOpts);\r\n\r\n    $(\"#showMapSelection\").click(function(){\r\n\r\n\t\t//Clear URL\r\n\t\twindow.location.hash = \"\";\r\n\r\n    \t$(\"#UI\").addClass(\"hidden\");\r\n    \tself.controller.setMapReady(false);\r\n    \tSceneUtils.swapPanels($(\"#suspendedPanel\"),$(\"#mapPanel\"));\r\n    \t$(\"canvas\").hide();\r\n    \t$(\"#mapPicker option\").prop('selected', false);\r\n    \t$(\"#mapPicker option\").first().prop('selected', true);\r\n    });\r\n\r\n    function onSpeedChange(evt, ui){\r\n    \tvar speed = Math.exp(ui.value);\r\n    \twindow.setTimeout(function(){\r\n    \t\tself.controller.setSpeed(speed);\t\r\n    \t},10);\t\r\n    }\r\n\r\n    function onSensChange(evt, ui){\r\n    \tvar sens = ui.value;\r\n    \twindow.setTimeout(function(){\r\n    \t\tself.controller.setSensitivity(sens);\r\n    \t},10);\r\n    }\r\n\r\n    function onFogChange(evt, ui){\r\n    \tSceneUtils.setFog(ui.value);\r\n    }\r\n\r\n    function onAmbientChange(evt, ui){\r\n    \tSceneUtils.setAmbientAdd(ui.value);\r\n    }\r\n\r\n    function onLightChange(evt, ui){\r\n    \twindow.setTimeout(function(){\r\n    \t\tSceneUtils.setHSLa(\r\n    \t\t\t0.27,\r\n    \t\t\t$(\"#saturationSlider\").slider(\"option\", \"value\"),\r\n    \t\t\t$(\"#lightnessSlider\").slider(\"option\", \"value\"),\r\n    \t\t\t$(\"#intensitySlider\").slider(\"option\", \"value\")\r\n\t\t\t);\r\n    \t\tSceneUtils.render();\r\n    \t},10);\r\n    }\r\n\r\n    \r\n\r\n    /// Sliders\r\n    $(\"#moveSpeedSlider\").slider({\r\n\t\tmin: 4, max: 10, step: 0.01,\r\n  \t\tchange: onSpeedChange\r\n    }).slider(\"value\",7.5);\r\n\r\n    $(\"#mouseSensSlider\").slider({\r\n\t\tmin: 0.0001, max: 0.01, step: 0.0001,\r\n  \t\tchange: onSensChange\r\n    }).slider(\"value\",0.002);\r\n    \r\n    $(\"#fogSlider\").slider({\r\n\t\tmin: 5000, max: 100000, step: 500,\r\n  \t\tchange: onFogChange\r\n    });\r\n\r\n    $(\"#ambientSlider\").slider({\r\n\t\tmin: 0, max: 1.0, step: 0.01,\r\n  \t\tchange: onAmbientChange\r\n    });\r\n\r\n    /// HSL\r\n    /*$(\"#saturationSlider\").slider({\r\n\t\tmin: 0, max: 1, step: 0.01,\r\n  \t\tchange: onLightChange\r\n    }).slider(\"value\",0.4);\r\n    $(\"#intensitySlider\").slider({\r\n\t\tmin: 0, max: 1, step: 0.01,\r\n  \t\tchange: onLightChange\r\n    }).slider(\"value\",0.5);\r\n    $(\"#lightnessSlider\").slider({\r\n\t\tmin: 0, max: 1, step: 0.01,\r\n  \t\tchange: onLightChange\r\n    }).slider(\"value\",0.5);*/\r\n\r\n    /// END Sliders\r\n\r\n\r\n    /// Toggle buttons\r\n    $(\"#invertInput\").change(function(){\r\n    \tself.controller.invertMouse();\r\n    })\r\n    $(\"#flyInput\").change(function(){\r\n    \t\r\n    \t/*if($(this).is(':checked'))\r\n    \t\t$(\"#fogSlider\").slider(\"value\",35000);\r\n    \telse \r\n    \t\t$(\"#fogSlider\").slider(\"value\",15000);*/\r\n    \t\t\r\n    \tself.controller.toggleFly();\r\n    })\r\n\r\n    $(\"#mouseLockBtn\").click(function(){\r\n    \tself.controller.lock();\r\n    });\r\n\r\n    /// END Toggle buttons\r\n\t$(\"#locationInput\").on('click',function(){ this.select(); });\r\n\r\n    // Instructions \r\n\t/*var instructions = $(\"<div class='ui-panel'>\"+\r\n\t\t\"<p class='title'>Instructions</p>\"+\r\n\t\t\"<p class='instruction'>Pick a map from the drop down menu.</p>\"+\r\n\t\t\"<p class='instruction'><strong>Click and hold</strong> to look around. \"+\r\n\t\t\"Use <strong>W A S D</strong> and <strong>space</strong> to move.</p>\"+\r\n\t\t\"<p class='instruction'>Enable experimental downward collision by unchecking <strong>fly</strong>.</p>\"+\r\n\t\t\"<p class='instruction'>Toggle this panel with <strong>U</strong>.</p>\"+\r\n\t\"</div>\");\r\n\t$UI.append(instructions);*/\r\n};\r\n\r\n\r\nmodule.exports = UI;"]}